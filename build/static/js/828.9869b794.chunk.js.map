{"version":3,"file":"static/js/828.9869b794.chunk.js","mappings":"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","sources":["container/tables/Invoice.jsx","container/tables/AddCms.jsx","container/tables/AddOrder.jsx","container/tables/Cards.js","container/tables/index.jsx","utility/services/orders.js","utility/services/restroItems.js","utility/services/tables.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport { useAtom } from 'jotai';\nimport { Button, Typography, Table, Divider } from 'antd';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport { currentStoreData } from '../../globalStore/index';\nconst { Title, Text } = Typography;\n\nconst OrderPDF = ({ orderDetails }) => {\n  const kotRef = useRef(null);\n  const billRef = useRef(null);\n  const [storeData, setStoreData] = useAtom(currentStoreData);\n  const currentDateTime = new Date().toLocaleString();\n\n  // PDF generation function for KOT (Kitchen Order Ticket)\n  const generateKOT = () => {\n    const content = kotRef.current;\n    html2canvas(content).then((canvas) => {\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('p', 'mm', [80, canvas.height * (80 / canvas.width)]);\n      pdf.addImage(imgData, 'PNG', 0, 0, 80, canvas.height * (80 / canvas.width));\n      pdf.save('kot.pdf');\n    });\n  };\n\n  // PDF generation function for the Bill\n  const generateBill = () => {\n    const content = billRef.current;\n    html2canvas(content).then((canvas) => {\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('p', 'mm', [80, canvas.height * (80 / canvas.width)]);\n      pdf.addImage(imgData, 'PNG', 0, 0, 80, canvas.height * (80 / canvas.width));\n      pdf.save('order_bill.pdf');\n    });\n  };\n\n  // Ant Design Table for order items\n  const columns = [\n    {\n      title: 'Item',\n      dataIndex: 'item_name',\n      key: 'item_name',\n    },\n    {\n      title: 'Qty',\n      dataIndex: 'quantity',\n      key: 'quantity',\n      align: 'center',\n    },\n  ];\n\n  const billColumns = [\n    {\n      title: 'Item',\n      dataIndex: 'item_name',\n      key: 'item_name',\n    },\n    {\n      title: 'Qty',\n      dataIndex: 'quantity',\n      key: 'quantity',\n      align: 'center',\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n      align: 'center',\n      render: (text) => `$${text.toFixed(2)}`,\n    },\n    {\n      title: 'Total',\n      key: 'total',\n      align: 'center',\n      render: (record) => `$${(record.quantity * record.price).toFixed(2)}`,\n    },\n  ];\n\n  return (\n    <div>\n      {/* KOT (Kitchen Order Ticket) */}\n      <div\n        ref={kotRef}\n        style={{\n          padding: '10px',\n          width: '80mm',\n          backgroundColor: '#fff',\n          margin: 'auto',\n          fontFamily: 'Arial, sans-serif',\n          border: '1px solid #000',\n        }}\n      >\n        <Title level={4} style={{ textAlign: 'center', marginBottom: '5px' }}>\n          {storeData.name}\n        </Title>\n        <Text style={{ textAlign: 'center', display: 'block', fontSize: '10px' }}>{storeData.address}</Text>\n        <Text style={{ textAlign: 'center', display: 'block', fontSize: '10px' }}>Phone: {storeData.phoneNumber}</Text>\n        <Text style={{ textAlign: 'center', display: 'block', fontSize: '10px', marginBottom: '10px' }}>\n          Date: {currentDateTime}\n        </Text>\n\n        <Divider dashed />\n\n        <Text style={{ fontSize: '12px' }}>\n          <strong>Order #:</strong> {orderDetails.orderNumber}\n        </Text>\n        <br />\n        <Text style={{ fontSize: '12px' }}>\n          <strong>Waiter:</strong> {orderDetails.waiterName || 'N/A'}\n        </Text>\n        <br />\n        <Text style={{ fontSize: '12px' }}>\n          <strong>Table #:</strong> {orderDetails.tableNumber}\n        </Text>\n\n        <Divider dashed />\n\n        {/* Order Items Table */}\n        <Table\n          dataSource={orderDetails.items}\n          columns={columns}\n          pagination={false}\n          size=\"small\"\n          style={{ marginBottom: '10px' }}\n        />\n\n        <Divider dashed />\n\n        <Text style={{ textAlign: 'center', display: 'block', fontSize: '12px' }}>Thank You!</Text>\n      </div>\n\n      <Button style={{ marginTop: '20px' }} onClick={generateKOT}>\n        Download KOT PDF\n      </Button>\n\n      {/* Bill */}\n      <div\n        ref={billRef}\n        style={{\n          padding: '10px',\n          width: '80mm',\n          backgroundColor: '#fff',\n          margin: 'auto',\n          fontFamily: 'Arial, sans-serif',\n          border: '1px solid #000',\n          marginTop: '40px',\n        }}\n      >\n        <Title level={4} style={{ textAlign: 'center', marginBottom: '5px' }}>\n          {storeData.name}\n        </Title>\n        <Text style={{ textAlign: 'center', display: 'block', fontSize: '10px' }}>{storeData.address}</Text>\n        <Text style={{ textAlign: 'center', display: 'block', fontSize: '10px' }}>Phone: {storeData.phoneNumber}</Text>\n        <Text style={{ textAlign: 'center', display: 'block', fontSize: '10px', marginBottom: '10px' }}>\n          Date: {currentDateTime}\n        </Text>\n        <Divider dashed />\n\n        <Text style={{ fontSize: '12px' }}>\n          <strong>Order #:</strong> {orderDetails.orderNumber}\n        </Text>\n        <br />\n        <Text style={{ fontSize: '12px' }}>\n          <strong>Waiter:</strong> {orderDetails.waiterName || 'N/A'}\n        </Text>\n        <br />\n        <Text style={{ fontSize: '12px' }}>\n          <strong>Table #:</strong> {orderDetails.tableNumber}\n        </Text>\n\n        <Divider dashed />\n\n        {/* Bill Items Table */}\n        <Table\n          dataSource={orderDetails.items}\n          columns={billColumns}\n          pagination={false}\n          size=\"small\"\n          style={{ marginBottom: '10px' }}\n        />\n\n        {/* Bill Total Summary */}\n        <Text style={{ fontSize: '12px', marginTop: '10px' }}>\n          <strong>Subtotal:</strong> ${orderDetails.subtotal}\n        </Text>\n        <br />\n        <Text style={{ fontSize: '12px' }}>\n          <strong>Tax ({orderDetails.tax}%):</strong> ${orderDetails.tax}\n        </Text>\n        <br />\n        <Text style={{ fontSize: '12px' }}>\n          <strong>Total:</strong> ${orderDetails.total}\n        </Text>\n\n        <Divider dashed />\n\n        <Text style={{ textAlign: 'center', display: 'block', fontSize: '12px', marginTop: '10px' }}>\n          Thank you for dining with us!\n        </Text>\n      </div>\n\n      <Button style={{ marginTop: '20px' }} onClick={generateBill}>\n        Download Bill PDF\n      </Button>\n    </div>\n  );\n};\n\nexport default OrderPDF;\n","import { Button, Col, Form, Input, InputNumber, Row, Select, Spin, message } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { DeleteOutlined } from '@ant-design/icons';\n\nimport { addCms, getSingleCms, updateCms } from '../../utility/services/tables';\n\nconst { Option } = Select;\n\nconst AddRoom = ({ setisAddCms, getAllData, setIsEditCms, isEditCms, currentStore, setNewRecord, newRecord }) => {\n  const [loading, setLoading] = useState(false);\n  const [form] = Form.useForm();\n\n  const onFinish = (values) => {\n    const tables = values.tables;\n\n    const body = tables.map((table) => ({\n      ...table,\n      store_id: currentStore,\n    }));\n\n    if (isEditCms?.cmsId) {\n      let bosyData = {\n        no_of_seats: body[0]?.no_of_seats,\n        status: body[0]?.status,\n        table_number: body[0]?.table_number,\n      };\n\n      updateCms({\n        id: isEditCms?.cmsId,\n        body: bosyData, // Assuming you're only editing one table at a time\n      })\n        .then((res) => {\n          setIsEditCms({ isOpen: false, cmsId: '' });\n          // getAllData();\n          setNewRecord(newRecord + 1);\n          message.success('Data updated successfully');\n        })\n        .catch((err) => console.log('err', err));\n    } else {\n      addCms({\n        body: body,\n      })\n        ?.then((res) => {\n          setisAddCms(false);\n          // getAllData();\n          setNewRecord(newRecord + 1);\n          message.success('Tables added successfully');\n        })\n        .catch((err) => {\n          console.log('err :>> ', err);\n        });\n    }\n  };\n\n  useEffect(() => {\n    // populate single data if editing\n    if (isEditCms?.cmsId) {\n      setLoading(true);\n      getSingleCms({ id: isEditCms?.cmsId })\n        .then((res) => {\n          form.setFieldsValue({ tables: [res?.data] });\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.log('err', err);\n          setLoading(false);\n        });\n    }\n  }, [isEditCms?.cmsId]);\n\n  return (\n    <>\n      <Spin spinning={loading}>\n        <div>\n          <Form\n            form={form}\n            layout=\"vertical\"\n            onFinish={onFinish}\n            initialValues={{\n              tables: [\n                {\n                  status: 'booked', // Default value for status\n                },\n              ],\n            }}\n          >\n            <Form.List name=\"tables\">\n              {(fields, { add, remove }) => (\n                <>\n                  {fields.map((field, index) => (\n                    <div key={field.key} style={{ marginBottom: 20 }}>\n                      <Row gutter={16} align=\"middle\">\n                        <Col xs={24} sm={24} md={24} lg={8}>\n                          <Form.Item\n                            {...field}\n                            label={`Table Number ${index + 1}`}\n                            name={[field.name, 'table_number']}\n                            fieldKey={[field.fieldKey, 'table_number']}\n                            rules={[\n                              {\n                                type: 'string',\n                                message: 'Table number must be a string.',\n                              },\n                            ]}\n                          >\n                            <Input placeholder=\"Enter table number\" />\n                          </Form.Item>\n                        </Col>\n                        <Col xs={24} sm={24} md={24} lg={8}>\n                          <Form.Item\n                            {...field}\n                            label=\"Number of Seats\"\n                            name={[field.name, 'no_of_seats']}\n                            fieldKey={[field.fieldKey, 'no_of_seats']}\n                            rules={[\n                              {\n                                required: true,\n                                message: 'Please enter the number of seats.',\n                              },\n                              {\n                                type: 'number',\n                                min: 1,\n                                message: 'Number of seats must be at least 1.',\n                              },\n                            ]}\n                          >\n                            <InputNumber min={1} placeholder=\"Enter number of seats\" style={{ width: '100%' }} />\n                          </Form.Item>\n                        </Col>\n                        <Col xs={12} sm={12} md={12} lg={6}>\n                          <Form.Item\n                            {...field}\n                            label=\"Status\"\n                            name={[field.name, 'status']}\n                            fieldKey={[field.fieldKey, 'status']}\n                            rules={[\n                              {\n                                required: true,\n                                message: 'Please select the status.',\n                              },\n                            ]}\n                          >\n                            <Select placeholder=\"Select status\">\n                              <Option value=\"available\">Available</Option>\n                              <Option value=\"booked\">Booked</Option>\n                              <Option value=\"service\">Service</Option>\n                              <Option value=\"preparing\">Preparing</Option>\n                            </Select>\n                          </Form.Item>\n                        </Col>\n                        <Col span={2}>\n                          {fields.length > 1 && (\n                            <DeleteOutlined\n                              onClick={() => remove(field.name)}\n                              style={{ fontSize: '20px', color: '#ff4d4f', cursor: 'pointer', marginTop: '30px' }}\n                            />\n                          )}\n                        </Col>\n                      </Row>\n                    </div>\n                  ))}\n                  {!isEditCms?.cmsId && (\n                    <Form.Item>\n                      <Button type=\"dashed\" onClick={() => add()} style={{ width: '60%' }} block>\n                        Add Another Table\n                      </Button>\n                    </Form.Item>\n                  )}\n                </>\n              )}\n            </Form.List>\n\n            <Form.Item style={{ textAlign: 'right' }}>\n              <Button onClick={() => setisAddCms(false)} style={{ marginRight: 8 }}>\n                Cancel\n              </Button>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      </Spin>\n    </>\n  );\n};\n\nexport default AddRoom;\n","import { Button, Col, Form, Input, InputNumber, Modal, Row, Select, Spin, Upload, message, Switch } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { MinusCircleOutlined } from '@ant-design/icons';\nimport OrderPDF from './Invoice';\nimport { addCms, getSingleCms, updateCms } from '../../utility/services/orders';\nimport { getAllCms } from '../../utility/services/restroItems';\n\nconst { Option } = Select;\n\nconst AddRoom = ({ tableData, setVisible, visible, currentStore, allCms, setAllCms }) => {\n  const [loading, setLoading] = useState(false);\n  const [item, setItem] = useState([]);\n  const [bill, setBill] = useState(false);\n  const [search, setSearch] = useState('');\n  const [deletedItem, setDeletedItem] = useState([]);\n  const [orderDetails, setOrderDetails] = useState({\n    orderNumber: '',\n    tableNumber: '',\n    items: [],\n    subtotal: 0,\n    tax: 0,\n    total: 0,\n  });\n  const [form] = Form.useForm();\n\n  const updateTableStatus = (orderId, status) => {\n    let dd = allCms.map((d) => {\n      if (d.id === tableData.id) {\n        d.status = status;\n        d.current_order = orderId;\n        return d;\n      }\n      return d;\n    });\n    setAllCms(dd);\n  };\n  const onFinish = (values) => {\n    const body = values;\n    body.table_id = body.table_id.toString();\n\n    if (tableData.current_order) {\n      body.order_items = [...body.order_items, ...deletedItem];\n      updateCms({\n        id: tableData.current_order,\n        body: body,\n      })\n        .then((res) => {\n          let status = body.status === 'paid' ? 'available' : 'booked';\n          let orderId = body.status === 'paid' ? null : tableData.current_order;\n          updateTableStatus(orderId, status);\n          message.success('Data updated successfully');\n        })\n        .catch((err) => {\n          message.error('Something Went Wrong');\n          console.log('err :>> ', err);\n        });\n    } else {\n      body.store_id = currentStore;\n      addCms({\n        body: body,\n      })\n        ?.then((res) => {\n          // console.log(res);\n          let orderId = body.status === 'paid' ? null : res?.data?.id;\n          let status = body.status === 'paid' ? 'available' : 'booked';\n          updateTableStatus(orderId, status);\n          message.success('Data added successfully');\n          setVisible(false);\n        })\n        .catch((err) => {\n          message.error('Something Went Wrong');\n          console.log('err :>> ', err);\n        });\n    }\n  };\n  useEffect(() => {\n    getAllCms({})\n      .then((data) => {\n        setItem(data.data.rows);\n      })\n      .catch((e) => {\n        message.error('Error While Fetching Items');\n      });\n  }, [form, search]);\n\n  useEffect(() => {\n    setDeletedItem([]);\n    setBill(false);\n    setOrderDetails({\n      orderNumber: '',\n      tableNumber: '',\n      items: [],\n      subtotal: 0,\n      tax: 0,\n      total: 0,\n    });\n  }, [visible]);\n\n  const getOrder = (id) => {\n    setLoading(true);\n    getSingleCms({ id })\n      .then((res) => {\n        form.setFieldsValue(res?.data);\n        let d = res?.data;\n        let ooo = {\n          orderNumber: d.id,\n          tableNumber: tableData.table_number,\n          items: d.order_items,\n          subtotal: d.total_price || 0,\n          tax: d.tax_precent || 0,\n          total: d.total_price || 0,\n        };\n        setOrderDetails(ooo);\n        setLoading(false);\n      })\n      .catch((err) => {\n        message.error(err?.data?.message || 'Something Went Wrong');\n        console.log('err', err);\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    if (visible) {\n      form.resetFields(); // Reset the form fields\n      form.setFieldsValue({\n        table_id: tableData.id,\n      });\n      if (tableData.current_order) {\n        getOrder(tableData.current_order);\n      }\n    }\n  }, [form, visible]);\n\n  const getAllItems = () => {\n    let data = form.getFieldsValue(['order_items']);\n    let total = 0;\n    data?.order_items?.map((d) => {\n      let t = Number(d?.price) * Number(d?.quantity);\n      total += t;\n    });\n    let tax_precent = form.getFieldValue('tax_precent');\n    let discount = form.getFieldValue('discount_precent');\n    let pt = 0.01 * tax_precent * total;\n    total += pt;\n    let dp = 0.01 * discount * total;\n    total -= dp;\n    form.setFieldValue('total_price', total);\n  };\n  return (\n    <>\n      <Spin spinning={loading}>\n        <div>\n          <Form\n            name=\"order\"\n            form={form}\n            layout=\"vertical\"\n            onChange={getAllItems}\n            onFinish={onFinish}\n            autoComplete=\"off\"\n          >\n            <Row gutter={16}>\n              <Col span={12}>\n                <Form.Item\n                  label=\"Table number\"\n                  name=\"table_id\"\n                  rules={[{ required: true, message: 'Please select the table ID' }]}\n                >\n                  <Select>\n                    <Option value={tableData.id}>\n                      {tableData.table_number} - {' (' + tableData.no_of_seats + ' Seater )'}\n                    </Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"Customer Name\" name=\"customer_name\">\n                  <Input />\n                </Form.Item>\n              </Col>\n            </Row>\n\n            <Row gutter={16}>\n              <Col xs={12} sm={12} md={12} lg={8}>\n                <Form.Item\n                  label=\"Total Price\"\n                  name=\"total_price\"\n                  rules={[{ required: true, message: 'Please enter the total price' }]}\n                >\n                  <InputNumber min={0} precision={2} style={{ width: '100%' }} />\n                </Form.Item>\n              </Col>\n              <Col xs={12} sm={12} md={12} lg={8}>\n                <Form.Item label=\"Discount Percent\" name=\"discount_precent\" initialValue={0}>\n                  <InputNumber min={0} max={100} precision={2} style={{ width: '100%' }} />\n                </Form.Item>\n              </Col>\n              <Col xs={12} sm={12} md={12} lg={8}>\n                <Form.Item label=\"Tax Percent\" name=\"tax_precent\" initialValue={0}>\n                  <InputNumber min={0} max={100} precision={2} style={{ width: '100%' }} />\n                </Form.Item>\n              </Col>\n            </Row>\n\n            <Row gutter={16}>\n              <Col xs={12} sm={12} md={12} lg={8}>\n                <Form.Item label=\"Order Status\" name=\"status\" initialValue=\"pending\">\n                  <Select>\n                    <Option value=\"pending\">Pending</Option>\n                    <Option value=\"preparing\">Preparing</Option>\n                    <Option value=\"served\">Served</Option>\n                    <Option value=\"paid\">Paid</Option>\n                    <Option value=\"canceled\">Canceled</Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n              <Col xs={12} sm={12} md={12} lg={8}>\n                <Form.Item label=\"Table Status\" name=\"free_table\" valuePropName=\"checked\">\n                  <Switch checkedChildren=\"Available\" unCheckedChildren=\"Booked\" />\n                </Form.Item>\n              </Col>\n            </Row>\n\n            <Form.List name=\"order_items\">\n              {(fields, { add, remove }) => (\n                <>\n                  {fields.map(({ key, name, fieldKey, ...restField }) => (\n                    <>\n                      <hr style={{ margin: '20px 0', borderColor: '#e8e8e8' }} />\n                      <Row key={key} gutter={16} align=\"middle\">\n                        <Col xs={12} sm={12} md={12} lg={6}>\n                          <Form.Item\n                            {...restField}\n                            name={[name, 'item_id']}\n                            fieldKey={[fieldKey, 'item_id']}\n                            label=\"Item Code\"\n                            rules={[{ required: true, message: 'Please select the item ID' }]}\n                          >\n                            <Select\n                              showSearch\n                              onSearch={(value) => {\n                                setSearch(value);\n                              }}\n                              onChange={(value) => {\n                                const selectedItem = item.find((data) => data.id === value);\n                                form.setFieldsValue({\n                                  order_items: {\n                                    [name]: {\n                                      item_name: selectedItem?.name,\n                                      price: selectedItem?.price,\n                                      quantity: 1,\n                                    },\n                                  },\n                                });\n                                getAllItems();\n                              }}\n                            >\n                              {item.map((data) => (\n                                <Option value={data.id} key={data.id}>\n                                  {data.item_code} - {data.name}\n                                </Option>\n                              ))}\n                            </Select>\n                          </Form.Item>\n                        </Col>\n                        <Col xs={12} sm={12} md={12} lg={6}>\n                          <Form.Item\n                            {...restField}\n                            name={[name, 'item_name']}\n                            fieldKey={[fieldKey, 'item_name']}\n                            label=\"Item Name\"\n                            rules={[{ required: true, message: 'Please enter the item name' }]}\n                          >\n                            <Input />\n                          </Form.Item>\n                        </Col>\n                        <Col xs={8} sm={12} md={12} lg={4}>\n                          <Form.Item\n                            {...restField}\n                            name={[name, 'quantity']}\n                            fieldKey={[fieldKey, 'quantity']}\n                            label=\"Quantity\"\n                            rules={[{ required: true, message: 'Please enter the quantity' }]}\n                          >\n                            <InputNumber min={0} style={{ width: '100%' }} />\n                          </Form.Item>\n                        </Col>\n                        <Col xs={12} sm={12} md={12} lg={6}>\n                          <Form.Item\n                            {...restField}\n                            name={[name, 'price']}\n                            fieldKey={[fieldKey, 'price']}\n                            label=\"Unit Price\"\n                            rules={[{ required: true, message: 'Please enter the price' }]}\n                          >\n                            <InputNumber min={0} precision={2} style={{ width: '100%' }} />\n                          </Form.Item>\n                        </Col>\n                        <Col span={2}>\n                          <MinusCircleOutlined\n                            onClick={() => {\n                              const itemToBeDeleted = form.getFieldValue('order_items')[name];\n                              remove(name);\n                              if (tableData.current_order) {\n                                console.log(deletedItem, itemToBeDeleted);\n                                let dd = deletedItem;\n                                dd.push({ ...itemToBeDeleted, deleted: true });\n                                setDeletedItem(dd);\n                              }\n                              getAllItems();\n                            }}\n                            style={{ fontSize: '20px', color: 'red' }}\n                          />\n                        </Col>\n                      </Row>\n                    </>\n                  ))}\n                  <Form.Item>\n                    <Button type=\"dashed\" onClick={() => add()} block>\n                      Add Item\n                    </Button>\n                  </Form.Item>\n                </>\n              )}\n            </Form.List>\n\n            <div className=\"flex justify-end gap-2 mt-5\">\n              <Button\n                onClick={() => {\n                  setVisible(false);\n                }}\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  setBill(!bill);\n                }}\n              >\n                View Bill\n              </Button>\n              <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n                Submit\n              </Button>\n            </div>\n          </Form>\n        </div>\n      </Spin>\n      <div className=\"mt-4\">{bill && <OrderPDF orderDetails={orderDetails} />}</div>\n    </>\n  );\n};\n\nexport default AddRoom;\n","import React from 'react';\nimport { Card, Col, Row, Tag, Typography, Collapse, Button, Popconfirm } from 'antd';\n\nimport { EditFilled, DeleteFilled, PlusOutlined, EyeOutlined } from '@ant-design/icons';\nconst { Text, Title } = Typography;\nconst { Panel } = Collapse;\n\nconst RoomCards = ({ allData, setIsEditCms, setTableData, setVisible }) => {\n  return (\n    <div style={{ padding: '1px' }}>\n      <Row gutter={[16, 16]}>\n        {allData.map((room) => (\n          <Col key={room.id} xs={24} sm={12} md={8} lg={6}>\n            <Card\n              title={\n                <Title level={5}>\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-sm sm:text-base\">Table No:- {room.table_number}</span>\n                    <span\n                      className=\"ml-5 sm:ml-16 \"\n                      onClick={() => {\n                        setVisible(true);\n                        setTableData(room);\n                      }}\n                    >\n                      {room.current_order ? (\n                        <Tag color=\"blue\">\n                          <EyeOutlined className=\"mr-1\" />\n                          view Order\n                        </Tag>\n                      ) : (\n                        <Tag color=\"green\">\n                          <PlusOutlined className=\"mr-1\" />\n                          Add Order\n                        </Tag>\n                      )}\n                    </span>\n                  </div>\n                </Title>\n              }\n              bordered={false}\n              style={{\n                boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n                borderRadius: '8px',\n              }}\n            >\n              <Text strong>#ID: </Text>\n              <Text>{room.id}</Text>\n              <br />\n              <Text strong>Total Seats: </Text>\n              <Text>{room.no_of_seats}</Text>\n              <br />\n              <Text strong>Status: </Text>\n              {room.status === 'available' ? (\n                <Tag color=\"green\">{room.status}</Tag>\n              ) : (\n                <Tag color=\"red\">{room.status}</Tag>\n              )}\n              <br />\n              {room.current_order && (\n                <>\n                  <Text strong>Current Order: </Text>\n                  {'#' + room.current_order}\n                </>\n              )}\n              {!room.current_order && (\n                <>\n                  <Text strong>Waiting For Orders</Text>\n                </>\n              )}\n              <div className=\"flex justify-between mt-2\">\n                <EditFilled\n                  onClick={() => setIsEditCms({ isOpen: true, cmsId: room?.id })}\n                  style={{ cursor: 'pointer', color: '#1890ff' }}\n                />\n                <Popconfirm\n                  title=\"Are you sure to delete this Table?\"\n                  onConfirm={() => {\n                    // deleteCms({ id: room?.id })\n                    //   .then((res) => {\n                    //     console.log('res', res);\n                    //     message.success('Deleted Successfully');\n                    //     // getAllData();\n                    //   })\n                    //   .catch((err) => console.log('err', err));\n                  }}\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                >\n                  <DeleteFilled onClick={() => {}} style={{ cursor: 'pointer', color: '#ff4d4f' }} />\n                </Popconfirm>\n              </div>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n};\n\nexport default RoomCards;\n","import React, { useEffect, useState } from 'react';\nimport { useAtom } from 'jotai';\nimport { Row, Col, Button, Modal, Input, Popconfirm, Select, Switch, Pagination } from 'antd';\nconst { Search } = Input;\nimport { Space, Table, Drawer } from 'antd';\nimport { EditFilled, DeleteFilled } from '@ant-design/icons';\nimport AddCms from './AddCms';\nimport AddOrder from './AddOrder';\nimport Cards1 from './Cards';\nimport { GlobalUtilityStyle } from '../styled';\nimport { PageHeader } from '../../components/page-headers/page-headers';\nimport { Cards } from '../../components/cards/frame/cards-frame';\nimport { deleteCms, getAllTables } from '../../utility/services/tables';\nimport { currentStoreId, currentTableData } from '../../globalStore/index';\nconst Cms = () => {\n  const [isAddCms, setisAddCms] = useState(false);\n  const [start, setStart] = useState(0);\n  const [searchValue, setSearchValue] = useState('');\n  const [statusChange, setStatusChange] = useState('');\n  const [currentStore, setCurrentStore] = useAtom(currentStoreId);\n  const [tableData, setTableData] = useAtom(currentTableData);\n  const [isAvailable, setIsAvailable] = useState(false);\n  const [newRecord, setNewRecord] = useState(0);\n  const [totalCount, setTotalCount] = useState(0);\n  const [visible, setVisible] = useState(false);\n\n  const [isEditCms, setIsEditCms] = useState({ isOpen: false, cmsId: '' });\n  const [allCms, setAllCms] = useState([]);\n\n  const PageRoutes = [\n    {\n      path: '/',\n      breadcrumbName: 'Dashboard',\n    },\n    {\n      path: '/tables',\n      breadcrumbName: 'Tables',\n    },\n  ];\n\n  const getAllData = ({ search, type, isAvailable }) => {\n    getAllTables({ start, limit: 12, search, type, isAvailable, store_id: currentStore })\n      .then((res) => {\n        if (res) {\n          setAllCms(res?.data?.rows);\n          setTotalCount(res?.data?.count);\n        }\n      })\n      .catch((err) => console.log('err', err));\n  };\n\n  useEffect(() => {\n    getAllData({ search: searchValue, type: statusChange, isAvailable });\n  }, [searchValue, statusChange, isAvailable, currentStore, newRecord, start]);\n\n  const onSearch = (value) => {\n    setSearchValue(value);\n  };\n  const handleStatusChange = (value) => {\n    setStatusChange(value);\n  };\n  const geIsActive = (value) => {\n    setIsAvailable(!isAvailable);\n  };\n  const changeStart = (value) => {\n    let s = 10 * (value - 1);\n    setStart(s);\n  };\n\n  const showDrawer = () => {\n    setVisible(true);\n  };\n\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  return (\n    <>\n      <PageHeader\n        title=\"Tables\"\n        routes={PageRoutes}\n        className=\"flex items-center justify-between px-8 xl:px-[15px] pt-2 pb-6 sm:pb-[30px] bg-transparent sm:flex-col\"\n      />\n      <GlobalUtilityStyle className=\"p-3\">\n        <Row gutter={16}>\n          <Col sm={24} xs={24} lg={24} className=\"\">\n            <Cards\n              title={\n                <div>\n                  <Row gutter={[16, 16]} align=\"middle\">\n                    <Col xs={24} sm={12} md={6}>\n                      <Select\n                        style={{\n                          width: '100%', // Full width for better responsiveness\n                        }}\n                        size=\"medium\"\n                        placeholder=\"Status\"\n                        onChange={handleStatusChange}\n                      >\n                        <Option value=\"\">All</Option>\n                        <Option value=\"booked\">Booked</Option>\n                        <Option value=\"available\">Available</Option>\n                        <Option value=\"service\">Service</Option>\n                        <Option value=\"preparing\">Preparing</Option>\n                      </Select>\n                    </Col>\n                    <Col xs={24} sm={8} md={6}>\n                      <Search\n                        placeholder=\"Table number\"\n                        allowClear\n                        enterButton=\"Search\"\n                        size=\"medium\"\n                        onSearch={onSearch}\n                        style={{ width: '100%' }} // Full width for better responsiveness\n                      />\n                    </Col>\n                  </Row>\n                </div>\n              }\n              moreBtn={\n                <Button type=\"primary\" onClick={() => setisAddCms(true)}>\n                  Add\n                </Button>\n              }\n            >\n              <Cards1\n                allData={allCms}\n                setIsEditCms={setIsEditCms}\n                setTableData={setTableData}\n                setVisible={setVisible}\n              />\n              <div className=\"mt-2 flex justify-end\">\n                <Pagination\n                  // current={1}\n                  pageSize={12}\n                  total={totalCount} // Total number of items\n                  onChange={changeStart}\n                  showSizeChanger={false} // Allows changing the number of items per page\n                  // pageSizeOptions={['10']} // Page size options\n                />\n              </div>\n            </Cards>\n          </Col>\n        </Row>\n      </GlobalUtilityStyle>\n\n      <Modal\n        title={`${isAddCms ? 'Add Tables' : 'Edit Table'}`}\n        destroyOnClose\n        open={isAddCms || isEditCms.isOpen}\n        width={1024}\n        // onOk={handleAddCmss}\n        footer={false}\n        onCancel={() => {\n          setisAddCms(false);\n          setIsEditCms({ isOpen: false, cmsId: '' });\n        }}\n      >\n        <AddCms\n          setisAddCms={setisAddCms}\n          getAllData={getAllData}\n          isEditCms={isEditCms}\n          setIsEditCms={setIsEditCms}\n          currentStore={currentStore}\n          newRecord={newRecord}\n          setNewRecord={setNewRecord}\n        />\n      </Modal>\n      <Drawer\n        title={tableData.current_order ? 'Update Order #' + tableData.current_order : 'Add Order'}\n        placement=\"right\"\n        onClose={onClose}\n        open={visible}\n        width={window.innerWidth < 768 ? 300 : 600}\n      >\n        <AddOrder\n          setVisible={setVisible}\n          tableData={tableData}\n          visible={visible}\n          allCms={allCms}\n          setAllCms={setAllCms}\n          // setTableData={setTableData}\n          currentStore={currentStore}\n        />\n      </Drawer>\n    </>\n  );\n};\n\nexport default Cms;\n","import { callApi } from '../apiUtils';\n\nconst addCms = async ({ body }) => {\n  const response = await callApi.post(`/orders`, body);\n  return response;\n};\n\nconst getAllCms = async ({ start, limit, status, search, dates }) => {\n  let searchQuery = search ? `&search=${search}` : '';\n  let statusQuery = status ? `&status=${status}` : '';\n  let dateQuery = '';\n  if (dates.length === 2) {\n    dateQuery = `&start_date=${dates[0]}&end_date=${dates[1]}`;\n  }\n  const response = await callApi.get(`/orders?start=${start}&limit=${limit}${searchQuery}${statusQuery}${dateQuery}`);\n  return response;\n};\n\nconst getSingleCms = async ({ id }) => {\n  const response = await callApi.get(`/orders/${id}`);\n  return response;\n};\n\nconst updateCms = async ({ id, body }) => {\n  const response = await callApi.patch(`/orders/${id}`, body);\n  return response;\n};\n\nconst deleteCms = async ({ id }) => {\n  const response = await callApi.delete(`/orders/${id}`);\n  return response;\n};\n\nexport { addCms, getAllCms, getSingleCms, updateCms, deleteCms };\n","import { callApi } from '../apiUtils';\n\nconst addCms = async ({ body }) => {\n  const response = await callApi.post(`/restroItems`, body);\n  return response;\n};\n\nconst getAllCms = async ({ start = 0, limit = 10, search }) => {\n  let searchQuery = search ? `&search=${search}` : '';\n  const response = await callApi.get(`/restroItems?start=${start}&limit=${limit}${searchQuery}`);\n  return response;\n};\n\nconst getSingleCms = async ({ id }) => {\n  const response = await callApi.get(`/restroItems/${id}`);\n  return response;\n};\n\nconst updateCms = async ({ id, body }) => {\n  const response = await callApi.patch(`/restroItems/${id}`, body);\n  return response;\n};\n\nconst deleteCms = async ({ id }) => {\n  const response = await callApi.delete(`/restroItems/${id}`);\n  return response;\n};\n\nexport { addCms, getAllCms, getSingleCms, updateCms, deleteCms };\n","import { callApi } from '../apiUtils';\n\nconst addCms = async ({ body }) => {\n  const response = await callApi.post(`/tables`, body);\n  return response;\n};\n\nconst getAllTables = async ({ start = 0, limit = 10, search, type, isAvailable, store_id }) => {\n  let searchQuery = search ? `&search=${search}` : ``;\n  let typeQuery = type ? `&status=${type}` : ``;\n  let storeQuery = store_id ? `&store_id=${store_id}` : ``;\n  let isAvailableQ = isAvailable ? `&isAvailable=${isAvailable}` : ``;\n\n  const response = await callApi.get(\n    `/tables?start=${start}&limit=${limit}${searchQuery}${typeQuery}${isAvailableQ}${storeQuery}`,\n  );\n  return response;\n};\n\nconst getSingleCms = async ({ id }) => {\n  const response = await callApi.get(`/tables/${id}`);\n  return response;\n};\n\nconst updateCms = async ({ id, body }) => {\n  const response = await callApi.patch(`/tables/${id}`, body);\n  return response;\n};\n\nconst deleteCms = async ({ id }) => {\n  const response = await callApi.delete(`/tables/${id}`);\n  return response;\n};\n\nexport { addCms, getAllTables, getSingleCms, updateCms, deleteCms };\n"],"names":["Title","Text","Typography","_ref","orderDetails","kotRef","useRef","billRef","storeData","setStoreData","useAtom","currentStoreData","currentDateTime","Date","toLocaleString","_jsxs","children","ref","style","padding","width","backgroundColor","margin","fontFamily","border","_jsx","level","textAlign","marginBottom","name","display","fontSize","address","phoneNumber","Divider","dashed","orderNumber","waiterName","tableNumber","Table","dataSource","items","columns","title","dataIndex","key","align","pagination","size","Button","marginTop","onClick","generateKOT","content","current","html2canvas","then","canvas","imgData","toDataURL","pdf","jsPDF","height","addImage","save","render","text","concat","toFixed","record","quantity","price","subtotal","tax","total","generateBill","Option","Select","setisAddCms","getAllData","setIsEditCms","isEditCms","currentStore","setNewRecord","newRecord","loading","setLoading","useState","form","Form","useForm","useEffect","cmsId","getSingleCms","id","res","setFieldsValue","tables","data","catch","err","console","log","_Fragment","Spin","spinning","layout","onFinish","values","body","map","table","store_id","_body$","_body$2","_body$3","bosyData","no_of_seats","status","table_number","updateCms","isOpen","message","success","_addCms","addCms","initialValues","List","fields","_ref2","add","remove","field","index","Row","gutter","Col","xs","sm","md","lg","Item","label","fieldKey","rules","type","Input","placeholder","required","min","InputNumber","value","span","length","DeleteOutlined","color","cursor","block","marginRight","htmlType","tableData","setVisible","visible","allCms","setAllCms","item","setItem","bill","setBill","search","setSearch","deletedItem","setDeletedItem","setOrderDetails","updateTableStatus","orderId","dd","d","current_order","getAllCms","rows","e","error","resetFields","table_id","ooo","order_items","total_price","tax_precent","_err$data","getAllItems","_data$order_items","getFieldsValue","t","Number","getFieldValue","discount","setFieldValue","onChange","toString","_res$data","autoComplete","precision","initialValue","max","valuePropName","Switch","checkedChildren","unCheckedChildren","_ref3","restField","borderColor","showSearch","onSearch","selectedItem","find","item_name","item_code","MinusCircleOutlined","itemToBeDeleted","push","deleted","className","OrderPDF","Panel","Collapse","allData","setTableData","room","Card","Tag","EyeOutlined","PlusOutlined","bordered","boxShadow","borderRadius","strong","EditFilled","Popconfirm","onConfirm","okText","cancelText","DeleteFilled","Search","Cms","isAddCms","start","setStart","searchValue","setSearchValue","statusChange","setStatusChange","setCurrentStore","currentStoreId","currentTableData","isAvailable","setIsAvailable","totalCount","setTotalCount","getAllTables","limit","_res$data2","count","PageHeader","routes","path","breadcrumbName","GlobalUtilityStyle","Cards","allowClear","enterButton","moreBtn","Cards1","Pagination","pageSize","showSizeChanger","Modal","destroyOnClose","open","footer","onCancel","AddCms","Drawer","placement","onClose","window","innerWidth","AddOrder","async","callApi","post","dates","searchQuery","statusQuery","dateQuery","get","_ref4","patch","deleteCms","_ref5","delete","typeQuery","storeQuery","isAvailableQ"],"sourceRoot":""}