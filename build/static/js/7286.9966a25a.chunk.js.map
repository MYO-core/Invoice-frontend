{"version":3,"file":"static/js/7286.9966a25a.chunk.js","mappings":"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","sources":["static/img/icon/home.svg","components/buttons/styled.js","components/buttons/buttons.js","components/modals/styled.js","components/modals/antd-modals.js","components/page-headers/style.js","components/page-headers/page-headers.js","redux/todo/actionCreator.js","components/todo/Todo.js","container/toDo/ToDo.js"],"sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgHome(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 14,\n    height: 15.574,\n    viewBox: \"0 0 14 15.574\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"estate\",\n    d: \"M16.222,6.661h0L11.555,2.57a2.333,2.333,0,0,0-3.111,0L3.778,6.661A2.333,2.333,0,0,0,3,8.419v6.8A2.333,2.333,0,0,0,5.333,17.55h9.333A2.333,2.333,0,0,0,17,15.217V8.411a2.333,2.333,0,0,0-.778-1.75Zm-4.667,9.333H8.444V12.106a.778.778,0,0,1,.778-.778h1.556a.778.778,0,0,1,.778.778Zm3.889-.778a.778.778,0,0,1-.778.778H13.111V12.106a2.333,2.333,0,0,0-2.333-2.333H9.222a2.333,2.333,0,0,0-2.333,2.333v3.889H5.333a.778.778,0,0,1-.778-.778V8.411a.778.778,0,0,1,.264-.583L9.487,3.745a.778.778,0,0,1,1.027,0L15.18,7.828a.778.778,0,0,1,.264.583Z\",\n    transform: \"translate(-3 -1.976)\",\n    fill: \"currentColor\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgHome);\nexport default __webpack_public_path__ + \"static/media/home.f87e389a5c1850fe48b55156d6a0d7b7.svg\";\nexport { ForwardRef as ReactComponent };","/* eslint-disable no-shadow */\nimport { Button } from 'antd';\nimport Styled from 'styled-components';\n\nconst ButtonGroup = Button.Group;\n\nconst ButtonStyled = Styled(Button)`\n    \n`;\n\nconst ButtonStyledGroup = Styled(ButtonGroup)`\n    \n`;\n\nexport { ButtonStyled, ButtonStyledGroup };\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { ButtonStyled, ButtonStyledGroup } from './styled';\n\n// @Todo props spreading\n\nfunction Button(props) {\n  const {\n    type,\n    shape,\n    icon,\n    size,\n    outlined,\n    ghost,\n    transparented,\n    raised,\n    squared,\n    color,\n    social,\n    load,\n    children,\n    ...rest\n  } = props;\n  const [state, setState] = useState({\n    loading: false,\n  });\n\n  const enterLoading = () => {\n    setState({ loading: true });\n  };\n\n  return (\n    <ButtonStyled\n      squared={squared}\n      outlined={outlined ? 1 : 0}\n      ghost={ghost}\n      transparent={transparented ? 1 : 0}\n      raised={raised ? 1 : 0}\n      data={type}\n      size={size}\n      shape={shape}\n      type={type}\n      icon={icon}\n      color={color}\n      social={social}\n      onClick={load && enterLoading}\n      loading={state.loading}\n      {...rest}\n    >\n      {children}\n    </ButtonStyled>\n  );\n}\n\nButton.defaultProps = {\n  type: 'default',\n};\n\nButton.propTypes = {\n  type: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'info',\n    'warning',\n    'danger',\n    'link',\n    'dark',\n    'light',\n    'gray',\n    'white',\n    'dashed',\n    'error',\n    'extra-light',\n    'default',\n  ]),\n  shape: PropTypes.string,\n  icon: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  outlined: PropTypes.bool,\n  transparented: PropTypes.bool,\n  raised: PropTypes.bool,\n  squared: PropTypes.bool,\n  social: PropTypes.bool,\n  load: PropTypes.bool,\n  ghost: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.node]),\n};\n\nfunction BtnGroup({ children }) {\n  return <ButtonStyledGroup>{children}</ButtonStyledGroup>;\n}\n\nBtnGroup.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.node).isRequired,\n};\n\nexport { Button, BtnGroup };\n","import { Modal } from 'antd';\nimport Styled from 'styled-components';\n\nconst ModalStyledColord = (type, theme) => `\n  .ant-modal-content, .ant-modal-header {\n    background-color: ${type !== 'default' && theme[`${type}-color`]} !important;\n  }\n  .ant-modal-title {\n    color: #fff;\n  }\n  .ant-modal-content{\n    .ant-modal-close-x{\n      svg{\n        color: #fff;\n      }\n    }\n    p{\n      color: #fff;\n    }\n  }\n  .ant-modal-footer button {\n    background: #fff;\n    color: #999;\n    border: 1px solid #ffff;\n  }\n`;\n\nconst ModalStyled = Styled(Modal)`    \n  ${({ theme, type }) => type && ModalStyledColord(type, theme)}\n`;\n\nexport { ModalStyled, ModalStyledColord };\n","import PropTypes, { object } from 'prop-types';\nimport React from 'react';\nimport { ModalStyled } from './styled';\nimport { Button } from '../buttons/buttons';\n\nfunction Modal(props) {\n  const { onCancel, className, onOk, visible, title, type, color, footer, width, children } = props;\n\n  return (\n    <ModalStyled\n      title={title}\n      visible={visible}\n      onOk={onOk}\n      onCancel={onCancel}\n      type={color ? type : false}\n      width={width}\n      className={className}\n      footer={\n        footer || footer === null\n          ? footer\n          : [\n              <Button type=\"secondary\" key=\"back\" onClick={onCancel}>\n                Cancel\n              </Button>,\n              <Button type={type} key=\"submit\" onClick={onOk}>\n                Save Change\n              </Button>,\n            ]\n      }\n    >\n      {children}\n    </ModalStyled>\n  );\n}\n\nModal.defaultProps = {\n  width: 620,\n  className: 'atbd-modal',\n};\n\nModal.propTypes = {\n  onCancel: PropTypes.func,\n  onOk: PropTypes.func,\n  visible: PropTypes.bool,\n  title: PropTypes.string,\n  className: PropTypes.string,\n  type: PropTypes.string,\n  footer: PropTypes.arrayOf(object),\n  width: PropTypes.number,\n  color: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.node]),\n};\n\nconst alertModal = ModalStyled;\nexport { Modal, alertModal };\n","import { PageHeader } from 'antd';\nimport Styled from 'styled-components';\n\nconst PageHeaderStyle = Styled(PageHeader)`\n  .ant-breadcrumb {\n    ol{\n      @media (max-width: 575px) {\n        justify-content: center;\n      }\n    }\n    li{\n        display:flex;\n        align-items:center;\n    }\n  }\n`;\n\nconst HeaderWrapper = Styled.div`\n  \n`;\n\nexport { PageHeaderStyle, HeaderWrapper };\n","import { Breadcrumb } from 'antd';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { ReactSVG } from 'react-svg';\nimport { HeaderWrapper, PageHeaderStyle } from './style';\n\nfunction PageHeader(props) {\n  const { title, subTitle, routes, buttons, ghost, bgColor, className } = props;\n  const breadcrumb = routes ? (\n    <Breadcrumb\n      className=\"flex order-2 relative top-1.5\"\n      separator={<span className=\"inline-flex bg-light-extra relative -top-0.5 w-1 h-1 rounded-full\" />}\n    >\n      {routes.map((route, index) =>\n        index + 1 === routes.length ? (\n          <Breadcrumb.Item key={index} className=\"text-breadcrumbs dark:text-white30 text-15\">\n            {route.breadcrumbName}\n          </Breadcrumb.Item>\n        ) : (\n          <Breadcrumb.Item key={index} className=\"inline-flex items-start\">\n            <ReactSVG\n              className=\"relative top-0.5 ltr:mr-2 rtl:ml-2 [&>div>svg]:text-[#8c90a4] dark:[&>div>svg]:text-white60 \"\n              src={require(`../../static/img/icon/home.svg`).default}\n            />{' '}\n            <Link\n              to={route.path}\n              className=\"text-light hover:text-primary dark:text-[#a4a5aa] dark:hover:text-white87 text-sm\"\n            >\n              {route.breadcrumbName}\n            </Link>\n          </Breadcrumb.Item>\n        ),\n      )}\n    </Breadcrumb>\n  ) : (\n    ''\n  );\n  return (\n    <HeaderWrapper bgColor={bgColor}>\n      <PageHeaderStyle\n        className={`${className}`}\n        title={title}\n        subTitle={subTitle}\n        breadcrumb={breadcrumb}\n        extra={buttons}\n        ghost={ghost}\n      />\n    </HeaderWrapper>\n  );\n}\n\nPageHeader.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  bgColor: PropTypes.string,\n  className: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  buttons: PropTypes.array,\n  ghost: PropTypes.bool,\n};\n\nexport { PageHeader };\n","import actions from './actions';\nimport initialState from '../../demoData/todo.json';\n\nconst { todoReadBegin, todoReadSuccess, todoReadErr, starUpdateBegin, starUpdateSuccess, starUpdateErr } = actions;\n\nconst ToDoGetData = () => {\n  return async (dispatch) => {\n    try {\n      dispatch(todoReadBegin());\n      dispatch(todoReadSuccess(initialState));\n    } catch (err) {\n      dispatch(todoReadErr(err));\n    }\n  };\n};\n\nconst ToDoAddData = (data) => {\n  return async (dispatch) => {\n    try {\n      dispatch(todoReadBegin());\n      dispatch(todoReadSuccess(data));\n    } catch (err) {\n      dispatch(todoReadErr(err));\n    }\n  };\n};\n\nconst ToDoDeleteData = (data) => {\n  return async (dispatch) => {\n    try {\n      dispatch(todoReadBegin());\n      dispatch(todoReadSuccess(data));\n    } catch (err) {\n      dispatch(todoReadErr(err));\n    }\n  };\n};\n\nconst onStarUpdate = (data, id) => {\n  return async (dispatch) => {\n    try {\n      dispatch(starUpdateBegin());\n      data.map((item) => {\n        if (item.key === id) {\n          const fav = item;\n          if (item.favorite) {\n            fav.favorite = false;\n          } else {\n            fav.favorite = true;\n          }\n        }\n        return dispatch(starUpdateSuccess(data));\n      });\n    } catch (err) {\n      dispatch(starUpdateErr(err));\n    }\n  };\n};\n\nexport { ToDoGetData, ToDoAddData, ToDoDeleteData, onStarUpdate };\n","/* eslint-disable no-param-reassign */\nimport UilExpandArrows from '@iconscout/react-unicons/icons/uil-expand-arrows';\nimport UilStar from '@iconscout/react-unicons/icons/uil-star';\nimport UilSync from '@iconscout/react-unicons/icons/uil-sync';\nimport UilTimes from '@iconscout/react-unicons/icons/uil-times';\nimport UilTrashAlt from '@iconscout/react-unicons/icons/uil-trash-alt';\nimport { Popconfirm } from 'antd';\nimport Checkbox from 'antd/lib/checkbox/Checkbox';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { onStarUpdate, ToDoDeleteData } from '../../redux/todo/actionCreator';\nimport { Button } from '../buttons/buttons';\n\nfunction ToDos({ todoData, showModal, isApp, title, status, tab }) {\n  const dispatch = useDispatch();\n  const todoDataMore = useSelector((state) => state.Todo.data);\n\n  const onHandleDelete = (key) => {\n    const data = todoDataMore.map((item) => {\n      if (item.key === key) {\n        item.status = 'deleted';\n      }\n      return item;\n    });\n\n    const hardDelete = todoDataMore.filter((item) => item.key !== key);\n\n    dispatch(ToDoDeleteData(status === 'deleted' ? hardDelete : data));\n  };\n\n  const onHandleCompleted = (key) => {\n    const data = todoDataMore.map((item) => {\n      if (item.key === key) {\n        item.isFinish = !item.isFinish;\n      }\n      return item;\n    });\n    dispatch(ToDoDeleteData(data));\n  };\n\n  const onHandleRestore = (key) => {\n    const data = todoDataMore.map((item) => {\n      if (item.key === key) {\n        item.status = 'new';\n      }\n      return item;\n    });\n    dispatch(ToDoDeleteData(data));\n  };\n\n  const dataSource = [];\n\n  if (todoData !== null) {\n    todoData.map((item, index) => {\n      return dataSource.push({\n        key: index + 1,\n        index,\n        action: isApp ? (\n          <div className=\"todos-action\">\n            <UilExpandArrows />\n            <Link\n              className={item.favorite ? 'star active' : 'star'}\n              onClick={() => dispatch(onStarUpdate(todoData, item.key))}\n              to=\"#\"\n            >\n              <UilStar />\n            </Link>\n            <Link onClick={() => onHandleDelete(item.key)} to=\"#\">\n              <UilTrashAlt />\n            </Link>\n          </div>\n        ) : (\n          <Link onClick={() => onHandleDelete(item.key)} to=\"#\">\n            <UilTimes />\n          </Link>\n        ),\n      });\n    });\n  }\n\n  const cancel = () => {\n    // console.log(e);\n  };\n\n  return (\n    <div className=\"bg-white dark:bg-white10 m-0 text-theme-gray dark:text-white60 text-[15px] rounded-10 relative p-[25px]\">\n      <div className=\"text-dark dark:text-white87 font-medium text-[17px] flex flex-wrap items-center justify-between gap-[15px] sm:justify-center mb-5\">\n        <h1 className=\"mb-0 inline-block overflow-hidden whitespace-nowrap text-ellipsis text-[18px] font-semibold sm:text-center\">\n          {title}\n        </h1>\n        {tab}\n      </div>\n      <div className=\"mt-0.5\">\n        {todoData.length > 0 ? (\n          <ul className=\"\">\n            {todoData\n              .sort((a, b) => b.id - a.id)\n              .map((item, i) => {\n                return (\n                  <li className=\"flex items-center justify-between gap-x-2.5 py-[7.5px]\" key={i}>\n                    <div className=\"[&>.ant-checkbox-wrapper]:flex [&>.ant-checkbox-wrapper]:gap-2.5 [&>.ant-checkbox-wrapper>span.ant-checkbox-checked>.ant-checkbox-inner]:bg-success [&>.ant-checkbox-wrapper>span.ant-checkbox-checked>.ant-checkbox-inner]:border-success [&>.ant-checkbox-wrapper>span>.ant-checkbox-inner]:w-[18px] [&>.ant-checkbox-wrapper>span>.ant-checkbox-inner]:h-[18px] [&>.ant-checkbox-wrapper>span]:p-0 [&>.ant-checkbox-wrapper>span]:text-[15px] [&>.ant-checkbox-wrapper>span]:text-body dark:[&>.ant-checkbox-wrapper>span]:text-white60 [&>.ant-checkbox-wrapper>span]:font-normal \">\n                      <Checkbox checked={item.isFinish} onChange={() => onHandleCompleted(item.key)}>\n                        {item.item}\n                      </Checkbox>\n                    </div>\n                    <div className=\"\">\n                      {status === 'deleted' ? (\n                        <Link onClick={() => onHandleRestore(item.key)} to=\"#\">\n                          <UilSync />\n                        </Link>\n                      ) : null}\n                      <Popconfirm\n                        title=\"Are you sure to delete this task?\"\n                        onConfirm={() => onHandleDelete(item.key)}\n                        onCancel={cancel}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                      >\n                        <Link className=\"flex items-center mx-2.5\" to=\"#\">\n                          <UilTrashAlt className=\"w-4 h-4 text-light dark:text-white60 hover:text-danger dark:hover:text-danger\" />\n                        </Link>\n                      </Popconfirm>\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        ) : (\n          <div className=\"bg-white dark:bg-white10 m-0 text-theme-gray dark:text-white60 text-[15px] rounded-10 relative p-[25px]\">\n            <span>Sorry !! No Completed Task Found :(</span>\n          </div>\n        )}\n      </div>\n      {showModal ? (\n        <Button\n          onClick={showModal}\n          className=\"h-[50px] px-6 text-xs font-medium bg-primary-transparent text-primary border-none\"\n          transparented\n          type=\"primary\"\n          size=\"large\"\n        >\n          + Add New Task\n        </Button>\n      ) : null}\n    </div>\n  );\n}\n\nToDos.defaultProps = {\n  todoData: [],\n  isApp: false,\n  title: 'Todo List',\n};\n\nToDos.propTypes = {\n  todoData: PropTypes.array,\n  showModal: PropTypes.func,\n  isApp: PropTypes.bool,\n  title: PropTypes.string,\n  tab: PropTypes.node,\n  status: PropTypes.string,\n};\nexport default ToDos;\n","import React, { useState } from 'react';\nimport { Row, Col, Input, Form } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Modal } from '../../components/modals/antd-modals';\nimport { Button } from '../../components/buttons/buttons';\nimport { PageHeader } from '../../components/page-headers/page-headers';\nimport { ToDoAddData } from '../../redux/todo/actionCreator';\nimport ToDos from '../../components/todo/Todo';\n\nfunction ToDo() {\n  const PageRoutes = [\n    {\n      path: '/admin',\n      breadcrumbName: 'Dashboard',\n    },\n    {\n      path: '',\n      breadcrumbName: 'To Do',\n    },\n  ];\n  const todoData = useSelector((state) => state.Todo.data);\n  const dispatch = useDispatch();\n\n  const [state, setState] = useState({\n    inputData: '',\n    selectedRowKeys: [],\n  });\n  const { inputData } = state;\n\n  const [form] = Form.useForm();\n\n  const onInputChange = (e) => {\n    setState({\n      ...state,\n      inputData: e.target.value,\n    });\n  };\n\n  const onSubmitHandler = () => {\n    const arrayData = [];\n    todoData.map((data) => {\n      return arrayData.push(data.key);\n    });\n    const max = Math.max(...arrayData);\n    if (inputData !== '') {\n      dispatch(\n        ToDoAddData([\n          ...todoData,\n          {\n            key: max + 1,\n            item: inputData,\n            time: new Date().getTime(),\n            favorite: false,\n          },\n        ]),\n      );\n      setState({\n        ...state,\n        inputData: '',\n        visible: false,\n      });\n    } else {\n      alert('Please Give a Task Title...');\n    }\n  };\n\n  const showModal = () => {\n    setState({\n      ...state,\n      visible: true,\n    });\n  };\n\n  const onCancel = () => {\n    setState({\n      ...state,\n      visible: false,\n    });\n  };\n\n  const handleCancel = () => {\n    onCancel();\n  };\n\n  return (\n    <>\n      <PageHeader\n        className=\"flex items-center justify-between px-8 xl:px-[15px] pt-2 pb-6 sm:pb-[30px] bg-transparent sm:flex-col\"\n        title=\"To Do\"\n        routes={PageRoutes}\n      />\n      <main className=\"min-h-[715px] lg:min-h-[580px] px-8 xl:px-[15px] pb-[30px] bg-transparent\">\n        <Row gutter={30}>\n          <Col xs={24}>\n            <>\n              <ToDos isApp todoData={todoData} showModal={showModal} />\n            </>\n          </Col>\n        </Row>\n        <Modal\n          type={state.modalType}\n          title=\"Add New Todo\"\n          visible={state.visible}\n          footer={null}\n          onCancel={handleCancel}\n        >\n          <div className=\"\">\n            <>\n              <Form className=\"\" name=\"todoAdd\" form={form} onFinish={onSubmitHandler}>\n                <Input value={inputData} onChange={onInputChange} placeholder=\"Input Item Name.......\" />\n                <br />\n                <br />\n\n                <Button\n                  onClick={showModal}\n                  htmlType=\"submit\"\n                  className=\"h-[50px] px-5 text-sm font-semibold\"\n                  type=\"primary\"\n                  size=\"large\"\n                >\n                  Add New\n                </Button>\n              </Form>\n            </>\n          </div>\n        </Modal>\n      </main>\n    </>\n  );\n}\n\nexport default ToDo;\n"],"names":["ButtonGroup","Button","Group","ButtonStyled","Styled","_templateObject","_taggedTemplateLiteral","_templateObject2","props","type","shape","icon","size","outlined","ghost","transparented","raised","squared","color","social","load","children","rest","state","setState","useState","loading","_jsx","transparent","data","onClick","enterLoading","defaultProps","ModalStyled","Modal","_ref","theme","ModalStyledColord","concat","onCancel","className","onOk","visible","title","footer","width","PageHeaderStyle","PageHeader","HeaderWrapper","div","subTitle","routes","buttons","bgColor","breadcrumb","Breadcrumb","separator","map","route","index","length","Item","breadcrumbName","_jsxs","ReactSVG","src","require","Link","to","path","extra","todoReadBegin","todoReadSuccess","todoReadErr","starUpdateBegin","starUpdateSuccess","starUpdateErr","actions","ToDoDeleteData","async","dispatch","err","ToDos","todoData","showModal","isApp","status","tab","useDispatch","todoDataMore","useSelector","Todo","onHandleDelete","key","item","hardDelete","filter","dataSource","push","action","UilExpandArrows","favorite","id","fav","onStarUpdate","UilStar","UilTrashAlt","UilTimes","cancel","sort","a","b","i","Checkbox","checked","isFinish","onChange","onHandleCompleted","onHandleRestore","UilSync","Popconfirm","onConfirm","okText","cancelText","inputData","selectedRowKeys","form","Form","useForm","_Fragment","Row","gutter","Col","xs","modalType","handleCancel","name","onFinish","onSubmitHandler","arrayData","max","Math","time","Date","getTime","alert","Input","value","e","target","placeholder","htmlType"],"sourceRoot":""}