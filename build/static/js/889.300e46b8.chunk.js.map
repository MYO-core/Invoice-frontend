{"version":3,"file":"static/js/889.300e46b8.chunk.js","mappings":"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","sources":["container/dashboard/newDashboard.jsx","utility/services/dashboard.js"],"sourcesContent":["import React, { useEffect, useState, Suspense } from 'react';\nimport { Row, Col, Card, Statistic, Layout, Typography } from 'antd';\nimport { Line, Bar } from '@ant-design/charts';\nimport { UserOutlined, ShopOutlined, HomeOutlined } from '@ant-design/icons';\nimport { getRestrauntStats, getHotelStats } from '../../utility/services/dashboard';\n\nconst { Title } = Typography;\nconst { Header, Footer, Content } = Layout;\n\nconst Dashboard = () => {\n  const [restaurantData, setRestaurantData] = useState({});\n  const [hotelData, setHotelData] = useState({});\n\n  useEffect(() => {\n    getRestrauntStats()\n      .then((d) => {\n        setRestaurantData(d.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n    getHotelStats()\n      .then((d) => {\n        setHotelData(d.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }, []);\n\n  // Safely access hotelData and restaurantData properties\n  const hotelCounts =\n    hotelData?.counts?.reduce((acc, item) => {\n      acc[item.type] = item.value;\n      return acc;\n    }, {}) || {};\n\n  const restaurantCounts =\n    restaurantData?.counts?.reduce((acc, item) => {\n      acc[item.type] = item.value;\n      return acc;\n    }, {}) || {};\n\n  // Line chart for hotel monthly bookings and income\n  const hotelMonthlyData = [\n    ...(hotelData?.monthlyBookings?.map((item) => ({\n      month: `Month ${item.date_part}`,\n      value: item.sum,\n      type: 'Bookings',\n    })) || []),\n    ...(hotelData?.monthlyIncome?.map((item) => ({\n      month: `Month ${item.date_part}`,\n      value: item.sum,\n      type: 'Income',\n    })) || []),\n  ];\n\n  const hotelMonthlyConfig = {\n    data: hotelMonthlyData,\n    xField: 'month',\n    yField: 'value',\n    seriesField: 'type',\n    smooth: true,\n    height: 300,\n    point: { size: 5, shape: 'circle' },\n    animation: {\n      appear: {\n        animation: 'path-in',\n        duration: 500,\n      },\n    },\n    tooltip: {\n      showMarkers: true,\n      shared: true,\n    },\n  };\n\n  // Line chart for restaurant monthly orders and income\n  const restaurantMonthlyData = [\n    ...(restaurantData?.monthlyOrders?.map((item) => ({\n      month: `Month ${item.date_part}`,\n      value: item.count,\n      type: 'Orders',\n    })) || []),\n    ...(restaurantData?.monthlyIncome?.map((item) => ({\n      month: `Month ${item.date_part}`,\n      value: item.sum,\n      type: 'Income',\n    })) || []),\n  ];\n\n  const restaurantMonthlyConfig = {\n    data: restaurantMonthlyData,\n    xField: 'month',\n    yField: 'value',\n    seriesField: 'type',\n    smooth: true,\n    height: 300,\n    point: { size: 5, shape: 'diamond' },\n    animation: {\n      appear: {\n        animation: 'path-in',\n        duration: 500,\n      },\n    },\n    tooltip: {\n      showMarkers: true,\n      shared: true,\n    },\n  };\n\n  function shortenText(text, wordLimit = 2) {\n    const words = text.split(' ');\n\n    if (words.length > wordLimit) {\n      return words.slice(0, wordLimit).join(' ') + '...';\n    }\n\n    return text;\n  }\n  // Bar chart for hotel room bookings\n  const hotelRoomsData =\n    hotelData?.maxBookedRooms?.map((item) => ({\n      roomType: item.roomType,\n      count: parseInt(item.count, 10),\n    })) || [];\n\n  const hotelRoomsConfig = {\n    data: hotelRoomsData,\n    xField: 'roomType',\n    yField: 'count',\n    seriesField: 'roomType',\n    colorField: 'roomType',\n    height: 300,\n    label: { style: { fill: '#aaa' } },\n    tooltip: {\n      showMarkers: true,\n    },\n    animation: {\n      appear: {\n        animation: 'scale-in-y',\n        duration: 500,\n      },\n    },\n  };\n\n  // Bar chart for top 5 products in restaurant\n  const topProductsData =\n    restaurantData?.top5Products?.map((item) => ({\n      name: shortenText(item.name),\n      count: parseInt(item.count, 10),\n    })) || [];\n\n  const topProductsConfig = {\n    data: topProductsData,\n    xField: 'name',\n    yField: 'count',\n    seriesField: 'name',\n    colorField: 'name',\n    height: 300,\n    label: { style: { fill: '#aaa' } },\n    tooltip: {\n      showMarkers: true,\n    },\n    animation: {\n      appear: {\n        animation: 'scale-in-x',\n        duration: 500,\n      },\n    },\n  };\n\n  return (\n    <Layout>\n      <Suspense fallback={<div>Loading...</div>}></Suspense>\n      <Content style={{ padding: '20px' }}>\n        <Row gutter={16}>\n          <Col xs={24} sm={12} lg={6}>\n            <Card>\n              <Statistic\n                title=\"Hotel Customers\"\n                value={hotelCounts?.customer_count || 0}\n                prefix={<UserOutlined />}\n                valueStyle={{ color: '#3f8600' }}\n              />\n            </Card>\n          </Col>\n          <Col xs={24} sm={12} lg={6}>\n            <Card>\n              <Statistic\n                title=\"Total Rooms\"\n                value={hotelCounts?.['total rooms'] || 0}\n                prefix={<HomeOutlined />}\n                valueStyle={{ color: '#1890ff' }}\n              />\n            </Card>\n          </Col>\n          <Col xs={24} sm={12} lg={6}>\n            <Card>\n              <Statistic\n                title=\"Available Rooms\"\n                value={hotelCounts?.available_rooms || 0}\n                prefix={<ShopOutlined />}\n                valueStyle={{ color: '#cf1322' }}\n              />\n            </Card>\n          </Col>\n          <Col xs={24} sm={12} lg={6}>\n            <Card>\n              <Statistic\n                title=\"Hotel Revenue\"\n                value={hotelCounts?.revenue || 0}\n                prefix=\"₹\"\n                valueStyle={{ color: '#faad14' }}\n              />\n            </Card>\n          </Col>\n        </Row>\n\n        <Row gutter={16} style={{ marginTop: 16 }}>\n          <Col xs={24} sm={12} lg={6}>\n            <Card>\n              <Statistic\n                title=\"Restaurant Items\"\n                value={restaurantCounts?.item_count || 0}\n                prefix={<ShopOutlined />}\n                valueStyle={{ color: '#52c41a' }}\n              />\n            </Card>\n          </Col>\n          <Col xs={24} sm={12} lg={6}>\n            <Card>\n              <Statistic\n                title=\"Total Orders\"\n                value={restaurantCounts?.total_orders || 0}\n                prefix={<UserOutlined />}\n                valueStyle={{ color: '#722ed1' }}\n              />\n            </Card>\n          </Col>\n          <Col xs={24} sm={12} lg={6}>\n            <Card>\n              <Statistic\n                title=\"Available Tables\"\n                value={restaurantCounts?.available_tables || 0}\n                prefix={<HomeOutlined />}\n                valueStyle={{ color: '#1890ff' }}\n              />\n            </Card>\n          </Col>\n          <Col xs={24} sm={12} lg={6}>\n            <Card>\n              <Statistic\n                title=\"Restaurant Revenue\"\n                value={restaurantCounts?.revenue || 0}\n                prefix=\"₹\"\n                valueStyle={{ color: '#faad14' }}\n              />\n            </Card>\n          </Col>\n        </Row>\n\n        <Row gutter={16} style={{ marginTop: 16 }}>\n          <Col xs={24} lg={12}>\n            <Card title=\"Hotel Monthly Bookings and Income\">\n              <Line {...hotelMonthlyConfig} />\n            </Card>\n          </Col>\n          <Col xs={24} lg={12}>\n            <Card title=\"Restaurant Monthly Orders and Income\">\n              <Line {...restaurantMonthlyConfig} />\n            </Card>\n          </Col>\n        </Row>\n\n        <Row gutter={16} style={{ marginTop: 16 }}>\n          <Col xs={24} lg={12}>\n            <Card title=\"Most Booked Rooms (Hotel)\">\n              <Bar {...hotelRoomsConfig} />\n            </Card>\n          </Col>\n          <Col xs={24} lg={12}>\n            <Card title=\"Top 5 Products (Restaurant)\">\n              <Bar {...topProductsConfig} />\n            </Card>\n          </Col>\n        </Row>\n      </Content>\n    </Layout>\n  );\n};\n\nexport default Dashboard;\n","import { callApi } from '../apiUtils';\n\nconst getHotelStats = async () => {\n  const response = await callApi.get(`/dashboard/hotel`);\n  return response;\n};\nconst getRestrauntStats = async () => {\n  const response = await callApi.get(`/dashboard/restraunt`);\n  return response;\n};\n\nexport { getRestrauntStats, getHotelStats };\n"],"names":["Title","Typography","Header","Footer","Content","Layout","Dashboard","_hotelData$counts","_restaurantData$count","_hotelData$monthlyBoo","_hotelData$monthlyInc","_restaurantData$month","_restaurantData$month2","_hotelData$maxBookedR","_restaurantData$top5P","restaurantData","setRestaurantData","useState","hotelData","setHotelData","useEffect","async","callApi","get","getRestrauntStats","then","d","data","catch","e","console","log","getHotelStats","hotelCounts","counts","reduce","acc","item","type","value","restaurantCounts","hotelMonthlyConfig","monthlyBookings","map","month","concat","date_part","sum","monthlyIncome","xField","yField","seriesField","smooth","height","point","size","shape","animation","appear","duration","tooltip","showMarkers","shared","restaurantMonthlyConfig","monthlyOrders","count","shortenText","text","wordLimit","arguments","length","undefined","words","split","slice","join","hotelRoomsConfig","maxBookedRooms","roomType","parseInt","colorField","label","style","fill","topProductsConfig","top5Products","name","_jsxs","children","_jsx","Suspense","fallback","padding","Row","gutter","Col","xs","sm","lg","Card","Statistic","title","customer_count","prefix","UserOutlined","valueStyle","color","HomeOutlined","available_rooms","ShopOutlined","revenue","marginTop","item_count","total_orders","available_tables","Line","Bar"],"sourceRoot":""}