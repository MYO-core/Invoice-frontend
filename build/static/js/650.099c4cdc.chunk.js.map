{"version":3,"file":"static/js/650.099c4cdc.chunk.js","mappings":"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","sources":["static/img/icon/home.svg","components/buttons/styled.js","components/buttons/buttons.js","components/cards/frame/cards-frame.js","components/dropdown/dropdown-style.js","components/dropdown/dropdown.js","components/page-headers/style.js","components/page-headers/page-headers.js","components/datePicker/datePicker.js","container/reports/index.jsx","utility/services/reports.js"],"sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgHome(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 14,\n    height: 15.574,\n    viewBox: \"0 0 14 15.574\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"estate\",\n    d: \"M16.222,6.661h0L11.555,2.57a2.333,2.333,0,0,0-3.111,0L3.778,6.661A2.333,2.333,0,0,0,3,8.419v6.8A2.333,2.333,0,0,0,5.333,17.55h9.333A2.333,2.333,0,0,0,17,15.217V8.411a2.333,2.333,0,0,0-.778-1.75Zm-4.667,9.333H8.444V12.106a.778.778,0,0,1,.778-.778h1.556a.778.778,0,0,1,.778.778Zm3.889-.778a.778.778,0,0,1-.778.778H13.111V12.106a2.333,2.333,0,0,0-2.333-2.333H9.222a2.333,2.333,0,0,0-2.333,2.333v3.889H5.333a.778.778,0,0,1-.778-.778V8.411a.778.778,0,0,1,.264-.583L9.487,3.745a.778.778,0,0,1,1.027,0L15.18,7.828a.778.778,0,0,1,.264.583Z\",\n    transform: \"translate(-3 -1.976)\",\n    fill: \"currentColor\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgHome);\nexport default __webpack_public_path__ + \"static/media/home.f87e389a5c1850fe48b55156d6a0d7b7.svg\";\nexport { ForwardRef as ReactComponent };","/* eslint-disable no-shadow */\nimport { Button } from 'antd';\nimport Styled from 'styled-components';\n\nconst ButtonGroup = Button.Group;\n\nconst ButtonStyled = Styled(Button)`\n    \n`;\n\nconst ButtonStyledGroup = Styled(ButtonGroup)`\n    \n`;\n\nexport { ButtonStyled, ButtonStyledGroup };\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { ButtonStyled, ButtonStyledGroup } from './styled';\n\n// @Todo props spreading\n\nfunction Button(props) {\n  const {\n    type,\n    shape,\n    icon,\n    size,\n    outlined,\n    ghost,\n    transparented,\n    raised,\n    squared,\n    color,\n    social,\n    load,\n    children,\n    ...rest\n  } = props;\n  const [state, setState] = useState({\n    loading: false,\n  });\n\n  const enterLoading = () => {\n    setState({ loading: true });\n  };\n\n  return (\n    <ButtonStyled\n      squared={squared}\n      outlined={outlined ? 1 : 0}\n      ghost={ghost}\n      transparent={transparented ? 1 : 0}\n      raised={raised ? 1 : 0}\n      data={type}\n      size={size}\n      shape={shape}\n      type={type}\n      icon={icon}\n      color={color}\n      social={social}\n      onClick={load && enterLoading}\n      loading={state.loading}\n      {...rest}\n    >\n      {children}\n    </ButtonStyled>\n  );\n}\n\nButton.defaultProps = {\n  type: 'default',\n};\n\nButton.propTypes = {\n  type: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'info',\n    'warning',\n    'danger',\n    'link',\n    'dark',\n    'light',\n    'gray',\n    'white',\n    'dashed',\n    'error',\n    'extra-light',\n    'default',\n  ]),\n  shape: PropTypes.string,\n  icon: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  outlined: PropTypes.bool,\n  transparented: PropTypes.bool,\n  raised: PropTypes.bool,\n  squared: PropTypes.bool,\n  social: PropTypes.bool,\n  load: PropTypes.bool,\n  ghost: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.node]),\n};\n\nfunction BtnGroup({ children }) {\n  return <ButtonStyledGroup>{children}</ButtonStyledGroup>;\n}\n\nBtnGroup.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.node).isRequired,\n};\n\nexport { Button, BtnGroup };\n","import UilellipsisH from '@iconscout/react-unicons/icons/uil-ellipsis-h';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card } from 'antd';\nimport { Dropdown } from '../../dropdown/dropdown';\nimport Heading from '../../heading/heading';\n\nfunction Cards(props) {\n  const {\n    title,\n    children,\n    more,\n    moreText,\n    size,\n    headless,\n    caption,\n    isbutton,\n    bodyStyle,\n    headStyle,\n    border,\n    bodypadding,\n    className,\n    moreBtn,\n  } = props;\n  return (\n    <>\n      {!headless ? (\n        <Card\n          size={size}\n          title={title}\n          bodyStyle={bodyStyle && bodyStyle}\n          headStyle={headStyle && headStyle}\n          bordered={border.toString()}\n          className={className}\n          bodypadding={bodypadding && bodypadding}\n          extra={\n            <div className=\"flex items-center gap-[15px]\">\n              {isbutton && isbutton}\n\n              {more && (\n                <Dropdown content={more} placement=\"bottom\">\n                  <Link className=\"flex items-center group\" onClick={(e) => e.preventDefault()} to=\"#\">\n                    {!moreText ? (\n                      <UilellipsisH className=\"w-[24px] h-[24px] text-light dark:text-white60 dark:group-hover:text-white87\" />\n                    ) : (\n                      'More'\n                    )}\n                  </Link>\n                </Dropdown>\n              )}\n              {moreBtn && <div>{moreBtn}</div>}\n            </div>\n          }\n          style={{ width: '100%' }}\n        >\n          {children}\n        </Card>\n      ) : (\n        <Card\n          bodypadding={bodypadding && bodypadding}\n          bodyStyle={bodyStyle && bodyStyle}\n          size={size}\n          style={{ width: '100%' }}\n          bordered={border.toString()}\n          className={className}\n        >\n          {title && <Heading as=\"h4\">{title}</Heading>}\n          {caption && <p>{caption}</p>}\n          {children}\n        </Card>\n      )}\n    </>\n  );\n}\n\nCards.defaultProps = {\n  border: false,\n};\n\nCards.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.node]),\n  size: PropTypes.string,\n  more: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.node]),\n  moreBtn: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.node]),\n  bodyStyle: PropTypes.object,\n  headStyle: PropTypes.object,\n  isbutton: PropTypes.node,\n  headless: PropTypes.bool,\n  border: PropTypes.bool,\n  caption: PropTypes.string,\n  bodypadding: PropTypes.string,\n  className: PropTypes.string,\n  moreText: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.node]),\n};\n\nexport { Cards };\n","import { Dropdown } from 'antd';\nimport Styled from 'styled-components';\n\nconst Content = Styled.div`\n    \n`;\n\nconst DropdownStyle = Styled(Dropdown)`\n\n`;\n\nexport { Content, DropdownStyle };\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { DropdownStyle } from './dropdown-style';\nimport { GlobalUtilityStyle } from '../../container/styled';\n\nfunction Dropdown(props) {\n  const { content, placement, title, action, children, style, className } = props;\n\n  return (\n    <DropdownStyle\n      overlayClassName={className}\n      style={style}\n      placement={placement}\n      title={title}\n      overlay={<GlobalUtilityStyle>{content}</GlobalUtilityStyle>}\n      trigger={action}\n    >\n      {children}\n    </DropdownStyle>\n  );\n}\n\nconst content = (\n  <>\n    <div className=\"block bg-white dark:bg-[#1b1e2b] shadow-regular dark:shadow-[0_5px_30px_rgba(1,4,19,.40)] py-1\">\n      <Link\n        className=\"flex items-center text-theme-gray dark:text-white60 hover:bg-primary-transparent hover:text-primary dark:hover:bg-white10 px-3 py-1.5 text-sm active\"\n        to=\"#\"\n      >\n        <span>Export to CSV</span>\n      </Link>\n      <Link\n        className=\"flex items-center text-theme-gray dark:text-white60 hover:bg-primary-transparent hover:text-primary dark:hover:bg-white10 px-3 py-1.5 text-sm active\"\n        to=\"#\"\n      >\n        <span>Export to XML</span>\n      </Link>\n      <Link\n        className=\"flex items-center text-theme-gray dark:text-white60 hover:bg-primary-transparent hover:text-primary dark:hover:bg-white10 px-3 py-1.5 text-sm active\"\n        to=\"#\"\n      >\n        <span>Export to Drive</span>\n      </Link>\n    </div>\n  </>\n);\n\nDropdown.defaultProps = {\n  action: ['hover'],\n  placement: 'bottomRight',\n  content,\n  style: { DropdownStyle },\n  className: 'hexadash-dropdown',\n};\n\nDropdown.propTypes = {\n  placement: PropTypes.string,\n  title: PropTypes.string,\n  action: PropTypes.array,\n  content: PropTypes.node,\n  children: PropTypes.node,\n  style: PropTypes.object,\n  className: PropTypes.string,\n};\n\nexport { Dropdown };\n","import { PageHeader } from 'antd';\nimport Styled from 'styled-components';\n\nconst PageHeaderStyle = Styled(PageHeader)`\n  .ant-breadcrumb {\n    ol{\n      @media (max-width: 575px) {\n        justify-content: center;\n      }\n    }\n    li{\n        display:flex;\n        align-items:center;\n    }\n  }\n`;\n\nconst HeaderWrapper = Styled.div`\n  \n`;\n\nexport { PageHeaderStyle, HeaderWrapper };\n","import { Breadcrumb } from 'antd';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { ReactSVG } from 'react-svg';\nimport { HeaderWrapper, PageHeaderStyle } from './style';\n\nfunction PageHeader(props) {\n  const { title, subTitle, routes, buttons, ghost, bgColor, className } = props;\n  const breadcrumb = routes ? (\n    <Breadcrumb\n      className=\"flex order-2 relative top-1.5\"\n      separator={<span className=\"inline-flex bg-light-extra relative -top-0.5 w-1 h-1 rounded-full\" />}\n    >\n      {routes.map((route, index) =>\n        index + 1 === routes.length ? (\n          <Breadcrumb.Item key={index} className=\"text-breadcrumbs dark:text-white30 text-15\">\n            {route.breadcrumbName}\n          </Breadcrumb.Item>\n        ) : (\n          <Breadcrumb.Item key={index} className=\"inline-flex items-start\">\n            <ReactSVG\n              className=\"relative top-0.5 ltr:mr-2 rtl:ml-2 [&>div>svg]:text-[#8c90a4] dark:[&>div>svg]:text-white60 \"\n              src={require(`../../static/img/icon/home.svg`).default}\n            />{' '}\n            <Link\n              to={route.path}\n              className=\"text-light hover:text-primary dark:text-[#a4a5aa] dark:hover:text-white87 text-sm\"\n            >\n              {route.breadcrumbName}\n            </Link>\n          </Breadcrumb.Item>\n        ),\n      )}\n    </Breadcrumb>\n  ) : (\n    ''\n  );\n  return (\n    <HeaderWrapper bgColor={bgColor}>\n      <PageHeaderStyle\n        className={`${className}`}\n        title={title}\n        subTitle={subTitle}\n        breadcrumb={breadcrumb}\n        extra={buttons}\n        ghost={ghost}\n      />\n    </HeaderWrapper>\n  );\n}\n\nPageHeader.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  bgColor: PropTypes.string,\n  className: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  buttons: PropTypes.array,\n  ghost: PropTypes.bool,\n};\n\nexport { PageHeader };\n","// eslint-disable-next-line max-classes-per-file\nimport { DatePicker } from 'antd';\nimport { addDays } from 'date-fns';\nimport React, { useState } from 'react';\nimport { DateRangePicker } from 'react-date-range';\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport { ItemWraper } from '../../container/styled';\nimport { Button } from '../buttons/buttons';\n\nfunction DateRangePickerOne() {\n  const [state, setState] = useState({\n    datePickerInternational: null,\n    dateRangePicker: {\n      selection: {\n        startDate: new Date(),\n        endDate: addDays(new Date(), 7),\n        key: 'selection',\n      },\n    },\n  });\n\n  const handleRangeChange = (which) => {\n    setState({\n      ...state,\n      dateRangePicker: {\n        ...state.dateRangePicker,\n        ...which,\n      },\n    });\n  };\n\n  const { dateRangePicker } = state;\n  const start = dateRangePicker.selection.startDate.toString().split(' ');\n  const end = dateRangePicker.selection.endDate.toString().split(' ');\n\n  return (\n    <ItemWraper>\n      <DateRangePicker\n        onChange={handleRangeChange}\n        showSelectionPreview\n        moveRangeOnFirstSelection={false}\n        className=\"PreviewArea [&+div]:mb-0 inline-flex md:max-h-[300px] md:overflow-x-hidden md:overflow-y-auto\"\n        months={2}\n        ranges={[dateRangePicker.selection]}\n        direction=\"horizontal\"\n      />\n\n      <div className=\"border-t border-regular dark:border-white10 p-[10px] flex items-center flex-wrap justify-end gap-[8px]\">\n        <p className=\"text-[13px] ltr:mr-[12px] rtl:ml-[12px] font-medium mb-0\">{`${start[1]} ${start[2]} ${start[3]} - ${end[1]} ${end[2]} ${end[3]}`}</p>\n        <Button size=\"small\" type=\"primary\" className=\"h-[32px] inline-flex items-center px-[13px] text-[12px]\">\n          Apply\n        </Button>\n        <Button\n          size=\"small\"\n          type=\"white\"\n          className=\"bg-transparent dark:text-white60 dark:border-white10 h-[32px] inline-flex items-center px-[13px] text-[12px]\"\n          outlined\n        >\n          Cancel\n        </Button>\n      </div>\n    </ItemWraper>\n  );\n}\n\nclass CustomDateRange extends React.Component {\n  // eslint-disable-next-line react/state-in-constructor\n  state = {\n    startValue: null,\n    endValue: null,\n    endOpen: false,\n  };\n\n  disabledStartDate = (startValue) => {\n    const { endValue } = this.state;\n    if (!startValue || !endValue) {\n      return false;\n    }\n    return startValue.valueOf() > endValue.valueOf();\n  };\n\n  disabledEndDate = (endValue) => {\n    const { startValue } = this.state;\n    if (!endValue || !startValue) {\n      return false;\n    }\n    return endValue.valueOf() <= startValue.valueOf();\n  };\n\n  onChange = (field, value) => {\n    this.setState({\n      [field]: value,\n    });\n  };\n\n  onStartChange = (value) => {\n    this.onChange('startValue', value);\n  };\n\n  onEndChange = (value) => {\n    this.onChange('endValue', value);\n  };\n\n  handleStartOpenChange = (open) => {\n    if (!open) {\n      this.setState({ endOpen: true });\n    }\n  };\n\n  handleEndOpenChange = (open) => {\n    this.setState({ endOpen: open });\n  };\n\n  render() {\n    const { startValue, endValue, endOpen } = this.state;\n\n    return (\n      <div>\n        <DatePicker\n          disabledDate={this.disabledStartDate}\n          showTime\n          format=\"YYYY-MM-DD HH:mm:ss\"\n          value={startValue}\n          placeholder=\"Start\"\n          onChange={this.onStartChange}\n          onOpenChange={this.handleStartOpenChange}\n          style={{ margin: '5px' }}\n        />\n\n        <DatePicker\n          disabledDate={this.disabledEndDate}\n          showTime\n          format=\"YYYY-MM-DD HH:mm:ss\"\n          value={endValue}\n          placeholder=\"End\"\n          onChange={this.onEndChange}\n          open={endOpen}\n          onOpenChange={this.handleEndOpenChange}\n          style={{ margin: '5px' }}\n        />\n      </div>\n    );\n  }\n}\n\nexport { DateRangePickerOne, CustomDateRange };\n","import React, { useEffect, useState } from 'react';\nimport moment from 'moment/moment';\nimport { Table, Row, Col, DatePicker, Tabs } from 'antd';\n\nimport { PageHeader } from '../../components/page-headers/page-headers';\nimport { GlobalUtilityStyle } from '../styled';\nimport { ShareButtonPageHeader } from '../../components/buttons/share-button/share-button';\nimport { ExportButtonPageHeader } from '../../components/buttons/export-button/export-button';\nimport { CalendarButtonPageHeader } from '../../components/buttons/calendar-button/calendar-button';\nimport { getAllCms } from '../../utility/services/reports';\nimport { Cards } from '../../components/cards/frame/cards-frame';\nconst { RangePicker } = DatePicker;\nfunction GalleryTwo() {\n  const [allUsers, setAllUsers] = useState([]);\n  const [dateString, setDateString] = useState('today');\n\n  const columns = [\n    {\n      title: '#Item Id',\n      dataIndex: 'item_id',\n      key: 'item_id',\n      width: 150,\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      width: 150,\n    },\n    {\n      title: 'Quantity',\n      dataIndex: 'quantity',\n      key: 'quantity',\n      width: 150,\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n      width: 150,\n    },\n  ];\n  const handleTabChange = (key) => {\n    setDateString(key);\n  };\n  const getAllUsers = () => {\n    getAllCms({ dateString })\n      .then((res) => {\n        if (res) {\n          setAllUsers(res?.data);\n        }\n      })\n      .catch((err) => console.log('err', err));\n  };\n\n  useEffect(() => {\n    getAllUsers();\n  }, [dateString]);\n  const PageRoutes = [\n    {\n      path: '/',\n      breadcrumbName: 'Dashboard',\n    },\n    {\n      path: '/reports',\n      breadcrumbName: 'Reports',\n    },\n  ];\n  return (\n    <>\n      <PageHeader\n        title=\"Reports\"\n        routes={PageRoutes}\n        className=\"flex items-center justify-between px-8 xl:px-[15px] pt-2 pb-6 sm:pb-[30px] bg-transparent sm:flex-col\"\n      />\n\n      <GlobalUtilityStyle className=\"p-3\">\n        <Row gutter={16}>\n          <Col sm={24} xs={24} lg={24} className=\"\">\n            <Cards\n              title={\n                <div\n                  style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'space-between',\n                  }}\n                >\n                  <Tabs defaultActiveKey=\"today\" onChange={handleTabChange}>\n                    <Tabs.TabPane tab=\"Today\" key=\"today\" />\n                    <Tabs.TabPane tab=\"This Week\" key=\"week\" />\n                    <Tabs.TabPane tab=\"This Month\" key=\"month\" />\n                    {/* <Tabs.TabPane tab=\"Custom Range\" key=\"custom\">\n                      <Row gutter={[16, 16]} align=\"middle\">\n                        <Col xs={24} sm={12} md={8} lg={6}>\n                          <RangePicker\n                            size=\"middle\"\n                            value={selectedRange}\n                            onChange={handleDateRangeChange}\n                            style={{ width: '100%' }}\n                          />\n                        </Col>\n                      </Row>\n                    </Tabs.TabPane> */}\n                  </Tabs>\n                  {/* <ExportButtonPageHeader /> */}\n                  {/* <div style={{ marginTop: 20 }}>\n                    <p>\n                      Selected Range:{' '}\n                      {selectedRange[0] && selectedRange[1]\n                        ? `${selectedRange[0].format('YYYY-MM-DD')} to ${selectedRange[1].format('YYYY-MM-DD')}`\n                        : 'No Range Selected'}\n                    </p>\n                  </div> */}\n                </div>\n              }\n            >\n              <Table\n                size=\"small\"\n                scroll={{ x: '100%', y: 'auto' }}\n                columns={columns}\n                dataSource={allUsers}\n                pagination={{ pageSize: 30 }}\n              />\n            </Cards>\n          </Col>\n        </Row>\n      </GlobalUtilityStyle>\n    </>\n  );\n}\n\nexport default GalleryTwo;\n","import { callApi } from '../apiUtils';\n\nconst getAllCms = async ({ dateString }) => {\n  let query = ``;\n  query += dateString ? `interval=${dateString}` : '';\n  const response = await callApi.get(`/restroItems/stats?` + query);\n  return response;\n};\n\nexport { getAllCms };\n"],"names":["ButtonGroup","Button","Group","ButtonStyled","Styled","_templateObject","_taggedTemplateLiteral","_templateObject2","props","type","shape","icon","size","outlined","ghost","transparented","raised","squared","color","social","load","children","rest","state","setState","useState","loading","_jsx","transparent","data","onClick","enterLoading","defaultProps","Cards","title","more","moreText","headless","caption","isbutton","bodyStyle","headStyle","border","bodypadding","className","moreBtn","_Fragment","_jsxs","Card","style","width","bordered","toString","Heading","as","extra","Dropdown","content","placement","Link","e","preventDefault","to","UilellipsisH","div","DropdownStyle","action","overlayClassName","overlay","GlobalUtilityStyle","trigger","PageHeaderStyle","PageHeader","HeaderWrapper","subTitle","routes","buttons","bgColor","breadcrumb","Breadcrumb","separator","map","route","index","length","Item","breadcrumbName","ReactSVG","src","require","path","concat","React","RangePicker","DatePicker","allUsers","setAllUsers","dateString","setDateString","getAllUsers","async","_ref","query","callApi","get","getAllCms","then","res","catch","err","console","log","useEffect","Row","gutter","Col","sm","xs","lg","display","justifyContent","alignItems","Tabs","defaultActiveKey","onChange","key","TabPane","tab","Table","scroll","x","y","columns","dataIndex","dataSource","pagination","pageSize"],"sourceRoot":""}