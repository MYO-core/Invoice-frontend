{"version":3,"file":"static/js/828.ea71afe2.chunk.js","mappings":"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","sources":["container/tables/Invoice.jsx","container/tables/AddCms.jsx","container/tables/AddOrder.jsx","container/tables/Cards.js","container/tables/index.jsx","utility/services/orders.js","utility/services/restroItems.js","utility/services/tables.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useAtom } from 'jotai';\nimport { Button, Typography, Table, Divider, message } from 'antd';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport printJS from 'print-js';\nimport { currentStoreData } from '../../globalStore/index';\nconst { Title, Text } = Typography;\n\nconst OrderPDF = ({ orderDetails }) => {\n  const kotRef = useRef(null);\n  const billRef = useRef(null);\n  const [storeData, setStoreData] = useAtom(currentStoreData);\n  const currentDateTime = new Date().toLocaleString();\n  const [tax, setTax] = useState(Number(orderDetails.tax) * 0.01 * Number(orderDetails.total));\n  // PDF generation function for KOT (Kitchen Order Ticket)\n  const generateKOT = () => {\n    const content = kotRef.current;\n    html2canvas(content).then((canvas) => {\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('p', 'mm', [80, canvas.height * (80 / canvas.width)]);\n      pdf.addImage(imgData, 'PNG', 0, 0, 80, canvas.height * (80 / canvas.width));\n      pdf.save('kot.pdf');\n    });\n  };\n\n  // PDF generation function for the Bill\n  // const generateBill = () => {\n  //   const content = billRef.current;\n  //   html2canvas(content).then((canvas) => {\n  //     const imgData = canvas.toDataURL('image/png');\n  //     const pdf = new jsPDF('p', 'mm', [80, canvas.height * (80 / canvas.width)]);\n  //     pdf.addImage(imgData, 'PNG', 0, 0, 80, canvas.height * (80 / canvas.width));\n  //     pdf.save('order_bill.pdf');\n  //   });\n  // };\n  const generateBill = () => {\n    try {\n      const content = billRef.current;\n      html2canvas(content).then((canvas) => {\n        const imgData = canvas.toDataURL('image/png');\n        const pdf = new jsPDF('p', 'mm', [80, canvas.height * (80 / canvas.width)]);\n        pdf.addImage(imgData, 'PNG', 0, 0, 80, canvas.height * (80 / canvas.width));\n        const pdfOutput = pdf.output('blob');\n        const url = URL.createObjectURL(pdfOutput);\n        printJS({\n          printable: url,\n          type: 'pdf',\n          documentTitle: 'Order Bill',\n        });\n      });\n    } catch (e) {\n      message.warning('Error While Printing Bill');\n    }\n  };\n\n  // Ant Design Table for order items\n  const columns = [\n    {\n      title: 'Item',\n      dataIndex: 'item_name',\n      key: 'item_name',\n    },\n    {\n      title: 'Qty',\n      dataIndex: 'quantity',\n      key: 'quantity',\n      align: 'center',\n    },\n  ];\n\n  const billColumns = [\n    {\n      title: 'Item',\n      dataIndex: 'item_name',\n      key: 'item_name',\n    },\n    {\n      title: 'Qty',\n      dataIndex: 'quantity',\n      key: 'quantity',\n      align: 'center',\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n      align: 'center',\n      render: (text) => `₹${text.toFixed(2)}`,\n    },\n    {\n      title: 'Total',\n      key: 'total',\n      align: 'center',\n      render: (record) => `₹${(record.quantity * record.price).toFixed(2)}`,\n    },\n  ];\n\n  return (\n    <div>\n      <div\n        ref={kotRef}\n        style={{\n          padding: '10px',\n          width: '80mm',\n          backgroundColor: '#fff',\n          margin: 'auto',\n          fontFamily: 'Arial, sans-serif',\n          border: '1px solid #000',\n        }}\n      >\n        <Title level={4} style={{ textAlign: 'center', marginBottom: '5px' }}>\n          {storeData.name}\n        </Title>\n        <Text style={{ textAlign: 'center', display: 'block', fontSize: '10px' }}>{storeData.address}</Text>\n        <Text style={{ textAlign: 'center', display: 'block', fontSize: '10px' }}>Phone: {storeData.phoneNumber}</Text>\n        <Text style={{ textAlign: 'center', display: 'block', fontSize: '10px' }}>Date: {currentDateTime}</Text>\n        <Text style={{ textAlign: 'center', display: 'block', fontSize: '10px', marginBottom: '10px' }}>\n          GSTIN: {orderDetails?.organisation?.gst}\n        </Text>\n\n        <Divider dashed />\n\n        <Text style={{ fontSize: '12px' }}>\n          <strong>Order #:</strong> {orderDetails.orderNumber}\n        </Text>\n        <br />\n        <Text style={{ fontSize: '12px' }}>\n          <strong>Waiter:</strong> {orderDetails.waiterName || 'N/A'}\n        </Text>\n        <br />\n        <Text style={{ fontSize: '12px' }}>\n          <strong>Table #:</strong> {orderDetails.tableNumber}\n        </Text>\n\n        <Divider dashed />\n\n        {/* Order Items Table */}\n        <Table\n          dataSource={orderDetails.items}\n          columns={columns}\n          pagination={false}\n          size=\"small\"\n          style={{ marginBottom: '10px' }}\n        />\n\n        <Divider dashed />\n\n        <Text style={{ textAlign: 'center', display: 'block', fontSize: '12px' }}>Thank You!</Text>\n      </div>\n\n      <Button style={{ marginTop: '20px' }} onClick={generateKOT}>\n        Download KOT\n      </Button>\n\n      {/* Bill */}\n      <div\n        ref={billRef}\n        style={{\n          padding: '10px',\n          width: '80mm',\n          backgroundColor: '#fff',\n          margin: 'auto',\n          fontFamily: 'Arial, sans-serif',\n          border: '1px solid #000',\n          marginTop: '40px',\n        }}\n      >\n        <Title level={4} style={{ textAlign: 'center', marginBottom: '5px' }}>\n          {storeData.name}\n        </Title>\n        <Text style={{ textAlign: 'center', display: 'block', fontSize: '10px' }}>{storeData.address}</Text>\n        <Text style={{ textAlign: 'center', display: 'block', fontSize: '10px' }}>Phone: {storeData.phoneNumber}</Text>\n        <Text style={{ textAlign: 'center', display: 'block', fontSize: '10px' }}>Date: {currentDateTime}</Text>\n        <Text style={{ textAlign: 'center', display: 'block', fontSize: '10px', marginBottom: '10px' }}>\n          GSTIN: {orderDetails?.organisation?.gst}\n        </Text>\n        <Divider dashed />\n\n        <Text style={{ fontSize: '12px' }}>\n          <strong>Order #:</strong> {orderDetails.orderNumber}\n        </Text>\n        <br />\n        <Text style={{ fontSize: '12px' }}>\n          <strong>Waiter:</strong> {orderDetails.waiterName || 'N/A'}\n        </Text>\n        <br />\n        <Text style={{ fontSize: '12px' }}>\n          <strong>Table #:</strong> {orderDetails.tableNumber}\n        </Text>\n\n        <Divider dashed />\n\n        {/* Bill Items Table */}\n        <Table\n          dataSource={orderDetails.items}\n          columns={billColumns}\n          pagination={false}\n          size=\"small\"\n          style={{ marginBottom: '10px' }}\n        />\n\n        {/* Bill Total Summary */}\n        {/* <Text style={{ fontSize: '12px', marginTop: '10px' }}>\n          <strong>Subtotal:</strong> ₹{orderDetails.subtotal}\n        </Text>\n        <br /> */}\n        <Text style={{ fontSize: '12px' }}>\n          <strong>Tax:</strong> ({orderDetails.tax}%)\n        </Text>\n        <br />\n        <Text style={{ fontSize: '12px' }}>\n          <strong>Total:</strong> ₹{orderDetails.total}\n        </Text>\n\n        <Divider dashed />\n\n        <Text style={{ textAlign: 'center', display: 'block', fontSize: '12px', marginTop: '10px' }}>\n          Thank you for dining with us!\n        </Text>\n      </div>\n\n      <Button style={{ marginTop: '20px' }} onClick={generateBill}>\n        Download Bill\n      </Button>\n    </div>\n  );\n};\n\nexport default OrderPDF;\n","import { Button, Col, Form, Input, InputNumber, Row, Select, Spin, message } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { DeleteOutlined } from '@ant-design/icons';\n\nimport { addCms, getSingleCms, updateCms } from '../../utility/services/tables';\n\nconst { Option } = Select;\n\nconst AddRoom = ({ setisAddCms, getAllData, setIsEditCms, isEditCms, currentStore, setNewRecord, newRecord }) => {\n  const [loading, setLoading] = useState(false);\n  const [form] = Form.useForm();\n\n  const onFinish = (values) => {\n    const tables = values.tables;\n\n    const body = tables.map((table) => ({\n      ...table,\n      store_id: currentStore,\n    }));\n\n    if (isEditCms?.cmsId) {\n      let bosyData = {\n        no_of_seats: body[0]?.no_of_seats,\n        status: body[0]?.status,\n        table_number: body[0]?.table_number,\n      };\n\n      updateCms({\n        id: isEditCms?.cmsId,\n        body: bosyData, // Assuming you're only editing one table at a time\n      })\n        .then((res) => {\n          setIsEditCms({ isOpen: false, cmsId: '' });\n          // getAllData();\n          setNewRecord(newRecord + 1);\n          message.success('Data updated successfully');\n        })\n        .catch((err) => console.log('err', err));\n    } else {\n      addCms({\n        body: body,\n      })\n        ?.then((res) => {\n          setisAddCms(false);\n          // getAllData();\n          setNewRecord(newRecord + 1);\n          message.success('Tables added successfully');\n        })\n        .catch((err) => {\n          console.log('err :>> ', err);\n        });\n    }\n  };\n\n  useEffect(() => {\n    // populate single data if editing\n    if (isEditCms?.cmsId) {\n      setLoading(true);\n      getSingleCms({ id: isEditCms?.cmsId })\n        .then((res) => {\n          form.setFieldsValue({ tables: [res?.data] });\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.log('err', err);\n          setLoading(false);\n        });\n    }\n  }, [isEditCms?.cmsId]);\n\n  return (\n    <>\n      <Spin spinning={loading}>\n        <div>\n          <Form\n            form={form}\n            layout=\"vertical\"\n            onFinish={onFinish}\n            initialValues={{\n              tables: [\n                {\n                  status: 'available',\n                },\n              ],\n            }}\n          >\n            <Form.List name=\"tables\">\n              {(fields, { add, remove }) => (\n                <>\n                  {fields.map((field, index) => (\n                    <div key={field.key} style={{ marginBottom: 20 }}>\n                      <Row gutter={16} align=\"middle\">\n                        <Col xs={24} sm={24} md={24} lg={8}>\n                          <Form.Item\n                            {...field}\n                            label={`Table Number ${index + 1}`}\n                            name={[field.name, 'table_number']}\n                            fieldKey={[field.fieldKey, 'table_number']}\n                            rules={[\n                              {\n                                type: 'string',\n                                message: 'Table number must be a string.',\n                              },\n                            ]}\n                          >\n                            <Input placeholder=\"Enter table number\" />\n                          </Form.Item>\n                        </Col>\n                        <Col xs={24} sm={24} md={24} lg={8}>\n                          <Form.Item\n                            {...field}\n                            label=\"Number of Seats\"\n                            name={[field.name, 'no_of_seats']}\n                            fieldKey={[field.fieldKey, 'no_of_seats']}\n                            rules={[\n                              {\n                                required: true,\n                                message: 'Please enter the number of seats.',\n                              },\n                              {\n                                type: 'number',\n                                min: 1,\n                                message: 'Number of seats must be at least 1.',\n                              },\n                            ]}\n                          >\n                            <InputNumber min={1} placeholder=\"Enter number of seats\" style={{ width: '100%' }} />\n                          </Form.Item>\n                        </Col>\n                        <Col xs={12} sm={12} md={12} lg={6}>\n                          <Form.Item\n                            {...field}\n                            label=\"Status\"\n                            name={[field.name, 'status']}\n                            fieldKey={[field.fieldKey, 'status']}\n                            rules={[\n                              {\n                                required: true,\n                                message: 'Please select the status.',\n                              },\n                            ]}\n                          >\n                            <Select placeholder=\"Select status\">\n                              <Option value=\"available\">Available</Option>\n                              <Option value=\"booked\">Booked</Option>\n                              <Option value=\"service\">Service</Option>\n                              <Option value=\"preparing\">Preparing</Option>\n                            </Select>\n                          </Form.Item>\n                        </Col>\n                        <Col span={2}>\n                          {fields.length > 1 && (\n                            <DeleteOutlined\n                              onClick={() => remove(field.name)}\n                              style={{ fontSize: '20px', color: '#ff4d4f', cursor: 'pointer', marginTop: '30px' }}\n                            />\n                          )}\n                        </Col>\n                      </Row>\n                    </div>\n                  ))}\n                  {!isEditCms?.cmsId && (\n                    <Form.Item>\n                      <Button type=\"dashed\" onClick={() => add()} style={{ width: '60%' }} block>\n                        Add Another Table\n                      </Button>\n                    </Form.Item>\n                  )}\n                </>\n              )}\n            </Form.List>\n\n            <Form.Item style={{ textAlign: 'right' }}>\n              <Button onClick={() => setisAddCms(false)} style={{ marginRight: 8 }}>\n                Cancel\n              </Button>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      </Spin>\n    </>\n  );\n};\n\nexport default AddRoom;\n","import {\n  Button,\n  Col,\n  Form,\n  Input,\n  InputNumber,\n  Modal,\n  Row,\n  Select,\n  Spin,\n  Upload,\n  message,\n  Switch,\n  AutoComplete,\n} from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { MinusCircleOutlined } from '@ant-design/icons';\nimport OrderPDF from './Invoice';\nimport { addCms, getSingleCms, updateCms } from '../../utility/services/orders';\nimport { getAllCms } from '../../utility/services/restroItems';\n\nconst { Option } = Select;\n\nconst AddRoom = ({ tableData, setVisible, visible, currentStore, allCms, setAllCms }) => {\n  const [loading, setLoading] = useState(false);\n  const [item, setItem] = useState([]);\n  const [bill, setBill] = useState(false);\n  const [search, setSearch] = useState('');\n  const [deletedItem, setDeletedItem] = useState([]);\n  const [orderDetails, setOrderDetails] = useState({\n    orderNumber: '',\n    tableNumber: '',\n    items: [],\n    subtotal: 0,\n    tax: 0,\n    total: 0,\n  });\n  const [form] = Form.useForm();\n\n  const updateTableStatus = (orderId, status) => {\n    let dd = allCms.map((d) => {\n      if (d.id === tableData.id) {\n        d.status = status;\n        d.current_order = orderId;\n        return d;\n      }\n      return d;\n    });\n    setAllCms(dd);\n  };\n  const onFinish = (values) => {\n    const body = values;\n    body.table_id = body.table_id.toString();\n\n    if (tableData.current_order) {\n      body.order_items = [...body.order_items, ...deletedItem];\n      updateCms({\n        id: tableData.current_order,\n        body: body,\n      })\n        .then((res) => {\n          let status = body.status === 'paid' ? 'available' : 'booked';\n          let orderId = body.status === 'paid' ? null : tableData.current_order;\n          updateTableStatus(orderId, status);\n          message.success('Data updated successfully');\n        })\n        .catch((err) => {\n          message.error('Something Went Wrong');\n          console.log('err :>> ', err);\n        });\n    } else {\n      body.store_id = currentStore;\n      addCms({\n        body: body,\n      })\n        ?.then((res) => {\n          // console.log(res);\n          let orderId = body.status === 'paid' ? null : res?.data?.id;\n          let status = body.status === 'paid' ? 'available' : 'booked';\n          updateTableStatus(orderId, status);\n          message.success('Data added successfully');\n          setVisible(false);\n        })\n        .catch((err) => {\n          message.error('Something Went Wrong');\n          console.log('err :>> ', err);\n        });\n    }\n  };\n  useEffect(() => {\n    getAllCms({ search })\n      .then((data) => {\n        setItem(data.data.rows);\n      })\n      .catch((e) => {\n        message.error('Error While Fetching Items');\n      });\n  }, [form, search]);\n\n  useEffect(() => {\n    setDeletedItem([]);\n    setBill(false);\n    setOrderDetails({\n      orderNumber: '',\n      tableNumber: '',\n      items: [],\n      subtotal: 0,\n      tax: 0,\n      total: 0,\n    });\n  }, [visible]);\n\n  const getOrder = (id) => {\n    setLoading(true);\n    getSingleCms({ id })\n      .then((res) => {\n        form.setFieldsValue(res?.data);\n        let d = res?.data;\n        let ooo = {\n          orderNumber: d.id,\n          tableNumber: tableData.table_number,\n          items: d.order_items,\n          subtotal: d.total_price || 0,\n          tax: d.tax_precent || 0,\n          total: d.total_price || 0,\n          organisation: d.Organisation,\n        };\n        setOrderDetails(ooo);\n        setLoading(false);\n      })\n      .catch((err) => {\n        message.error(err?.data?.message || 'Something Went Wrong');\n        console.log('err', err);\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    if (visible) {\n      form.resetFields(); // Reset the form fields\n      form.setFieldsValue({\n        table_id: tableData.id,\n      });\n      if (tableData.current_order) {\n        getOrder(tableData.current_order);\n      }\n    }\n  }, [form, visible]);\n\n  const getAllItems = () => {\n    let data = form.getFieldsValue(['order_items']);\n    let total = 0;\n    data?.order_items?.map((d) => {\n      let t = Number(d?.price) * Number(d?.quantity);\n      total += t;\n    });\n    let tax_precent = form.getFieldValue('tax_precent');\n    let discount = form.getFieldValue('discount_precent');\n    let pt = 0.01 * tax_precent * total;\n    total += pt;\n    let dp = 0.01 * discount * total;\n    total -= dp;\n    form.setFieldValue('total_price', total);\n  };\n  return (\n    <>\n      <Spin spinning={loading}>\n        <div>\n          <Form\n            name=\"order\"\n            form={form}\n            layout=\"vertical\"\n            onChange={getAllItems}\n            onFinish={onFinish}\n            autoComplete=\"off\"\n          >\n            <Row gutter={16}>\n              <Col span={12}>\n                <Form.Item\n                  label=\"Table number\"\n                  name=\"table_id\"\n                  rules={[{ required: true, message: 'Please select the table ID' }]}\n                >\n                  <Select>\n                    <Option value={tableData.id}>\n                      {tableData.table_number} - {' (' + tableData.no_of_seats + ' Seater )'}\n                    </Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"Customer Name\" name=\"customer_name\">\n                  <Input />\n                </Form.Item>\n              </Col>\n            </Row>\n\n            <Row gutter={16}>\n              <Col xs={12} sm={12} md={12} lg={8}>\n                <Form.Item\n                  label=\"Total Price\"\n                  name=\"total_price\"\n                  rules={[{ required: true, message: 'Please enter the total price' }]}\n                >\n                  <InputNumber min={0} precision={2} style={{ width: '100%' }} />\n                </Form.Item>\n              </Col>\n              <Col xs={12} sm={12} md={12} lg={8}>\n                <Form.Item label=\"Discount Percent\" name=\"discount_precent\" initialValue={0}>\n                  <InputNumber min={0} max={100} precision={2} style={{ width: '100%' }} />\n                </Form.Item>\n              </Col>\n              <Col xs={12} sm={12} md={12} lg={8}>\n                <Form.Item label=\"Tax Percent\" name=\"tax_precent\" initialValue={0}>\n                  <InputNumber min={0} max={100} precision={2} style={{ width: '100%' }} />\n                </Form.Item>\n              </Col>\n            </Row>\n\n            <Row gutter={16}>\n              <Col xs={12} sm={12} md={12} lg={8}>\n                <Form.Item label=\"Order Status\" name=\"status\" initialValue=\"pending\">\n                  <Select>\n                    <Option value=\"pending\">Pending</Option>\n                    <Option value=\"preparing\">Preparing</Option>\n                    <Option value=\"served\">Served</Option>\n                    <Option value=\"paid\">Paid</Option>\n                    <Option value=\"canceled\">Canceled</Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n              <Col xs={12} sm={12} md={12} lg={8}>\n                <Form.Item label=\"Table Status\" name=\"free_table\" valuePropName=\"checked\">\n                  <Switch checkedChildren=\"Available\" unCheckedChildren=\"Booked\" />\n                </Form.Item>\n              </Col>\n            </Row>\n\n            <Form.List name=\"order_items\">\n              {(fields, { add, remove }) => (\n                <>\n                  {fields.map(({ key, name, fieldKey, ...restField }) => (\n                    <>\n                      <hr style={{ margin: '20px 0', borderColor: '#e8e8e8' }} />\n                      <Row key={key} gutter={16} align=\"middle\">\n                        <Col xs={12} sm={12} md={12} lg={6}>\n                          <Form.Item\n                            {...restField}\n                            name={[name, 'item_id']}\n                            fieldKey={[fieldKey, 'item_id']}\n                            label=\"Item Code\"\n                            rules={[{ required: true, message: 'Please select the item ID' }]}\n                          >\n                            <AutoComplete\n                              onSearch={(value) => {\n                                setSearch(value);\n                              }}\n                              onSelect={(value) => {\n                                const selectedItem = item.find((data) => data.id === value);\n                                form.setFieldsValue({\n                                  order_items: {\n                                    [name]: {\n                                      item_name: selectedItem?.name,\n                                      price: selectedItem?.price,\n                                      quantity: 1,\n                                    },\n                                  },\n                                });\n                                getAllItems();\n                              }}\n                              options={item.map((data) => ({\n                                value: data.id,\n                                label: `${data.item_code} - ${data.name}`,\n                              }))}\n                            />\n                          </Form.Item>\n                        </Col>\n                        <Col xs={12} sm={12} md={12} lg={6}>\n                          <Form.Item\n                            {...restField}\n                            name={[name, 'item_name']}\n                            fieldKey={[fieldKey, 'item_name']}\n                            label=\"Item Name\"\n                            rules={[{ required: true, message: 'Please enter the item name' }]}\n                          >\n                            <Input />\n                          </Form.Item>\n                        </Col>\n                        <Col xs={8} sm={12} md={12} lg={4}>\n                          <Form.Item\n                            {...restField}\n                            name={[name, 'quantity']}\n                            fieldKey={[fieldKey, 'quantity']}\n                            label=\"Quantity\"\n                            rules={[{ required: true, message: 'Please enter the quantity' }]}\n                          >\n                            <InputNumber min={0} style={{ width: '100%' }} />\n                          </Form.Item>\n                        </Col>\n                        <Col xs={12} sm={12} md={12} lg={6}>\n                          <Form.Item\n                            {...restField}\n                            name={[name, 'price']}\n                            fieldKey={[fieldKey, 'price']}\n                            label=\"Unit Price\"\n                            rules={[{ required: true, message: 'Please enter the price' }]}\n                          >\n                            <InputNumber min={0} precision={2} style={{ width: '100%' }} />\n                          </Form.Item>\n                        </Col>\n                        <Col span={2}>\n                          <MinusCircleOutlined\n                            onClick={() => {\n                              const itemToBeDeleted = form.getFieldValue('order_items')[name];\n                              remove(name);\n                              if (tableData.current_order) {\n                                let dd = deletedItem;\n                                dd.push({ ...itemToBeDeleted, deleted: true });\n                                setDeletedItem(dd);\n                              }\n                              getAllItems();\n                            }}\n                            style={{ fontSize: '20px', color: 'red' }}\n                          />\n                        </Col>\n                      </Row>\n                    </>\n                  ))}\n                  <Form.Item>\n                    <Button type=\"dashed\" onClick={() => add()} block>\n                      Add Item\n                    </Button>\n                  </Form.Item>\n                </>\n              )}\n            </Form.List>\n\n            <div className=\"flex justify-end gap-2 mt-5\">\n              <Button\n                onClick={() => {\n                  setVisible(false);\n                }}\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  if (orderDetails?.orderNumber > '') {\n                    setBill(!bill);\n                  } else {\n                    message.warning('Please Save the Order');\n                  }\n                }}\n              >\n                View Bill\n              </Button>\n              <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n                Submit\n              </Button>\n            </div>\n          </Form>\n        </div>\n      </Spin>\n      <div className=\"mt-4\">{bill && <OrderPDF orderDetails={orderDetails} />}</div>\n    </>\n  );\n};\n\nexport default AddRoom;\n","import React from 'react';\nimport { Card, Col, Row, Tag, Typography, Collapse, Button, Popconfirm } from 'antd';\n\nimport { EditFilled, DeleteFilled, PlusOutlined, EyeOutlined } from '@ant-design/icons';\nconst { Text, Title } = Typography;\nconst { Panel } = Collapse;\n\nconst RoomCards = ({ allData, setIsEditCms, setTableData, setVisible }) => {\n  return (\n    <div style={{ padding: '1px' }}>\n      <Row gutter={[16, 16]}>\n        {allData.map((room) => (\n          <Col key={room.id} xs={24} sm={12} md={8} lg={6}>\n            <Card\n              title={\n                <Title level={5}>\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-sm sm:text-base\">Table No:- {room.table_number}</span>\n                    <span\n                      className=\"ml-5 sm:ml-16 \"\n                      onClick={() => {\n                        setVisible(true);\n                        setTableData(room);\n                      }}\n                    >\n                      {room.current_order ? (\n                        <Tag color=\"blue\">\n                          <EyeOutlined className=\"mr-1\" />\n                          view Order\n                        </Tag>\n                      ) : (\n                        <Tag color=\"green\">\n                          <PlusOutlined className=\"mr-1\" />\n                          Add Order\n                        </Tag>\n                      )}\n                    </span>\n                  </div>\n                </Title>\n              }\n              bordered={false}\n              style={{\n                boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n                borderRadius: '8px',\n              }}\n            >\n              <Text strong>#ID: </Text>\n              <Text>{room.id}</Text>\n              <br />\n              <Text strong>Total Seats: </Text>\n              <Text>{room.no_of_seats}</Text>\n              <br />\n              <Text strong>Status: </Text>\n              {room.status === 'available' ? (\n                <Tag color=\"green\">{room.status}</Tag>\n              ) : (\n                <Tag color=\"red\">{room.status}</Tag>\n              )}\n              <br />\n              {room.current_order && (\n                <>\n                  <Text strong>Current Order: </Text>\n                  {'#' + room.current_order}\n                </>\n              )}\n              {!room.current_order && (\n                <>\n                  <Text strong>Waiting For Orders</Text>\n                </>\n              )}\n              <div className=\"flex justify-between mt-2\">\n                <EditFilled\n                  onClick={() => setIsEditCms({ isOpen: true, cmsId: room?.id })}\n                  style={{ cursor: 'pointer', color: '#1890ff' }}\n                />\n                <Popconfirm\n                  title=\"Are you sure to delete this Table?\"\n                  onConfirm={() => {\n                    // deleteCms({ id: room?.id })\n                    //   .then((res) => {\n                    //     console.log('res', res);\n                    //     message.success('Deleted Successfully');\n                    //     // getAllData();\n                    //   })\n                    //   .catch((err) => console.log('err', err));\n                  }}\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                >\n                  <DeleteFilled onClick={() => {}} style={{ cursor: 'pointer', color: '#ff4d4f' }} />\n                </Popconfirm>\n              </div>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n};\n\nexport default RoomCards;\n","import React, { useEffect, useState } from 'react';\nimport { useAtom } from 'jotai';\nimport { Row, Col, Button, Modal, Input, Popconfirm, Select, Switch, Pagination } from 'antd';\nconst { Search } = Input;\nimport { Space, Table, Drawer } from 'antd';\nimport { EditFilled, DeleteFilled } from '@ant-design/icons';\nimport AddCms from './AddCms';\nimport AddOrder from './AddOrder';\nimport Cards1 from './Cards';\nimport { GlobalUtilityStyle } from '../styled';\nimport { PageHeader } from '../../components/page-headers/page-headers';\nimport { Cards } from '../../components/cards/frame/cards-frame';\nimport { deleteCms, getAllTables } from '../../utility/services/tables';\nimport { currentStoreId, currentTableData } from '../../globalStore/index';\nconst Cms = () => {\n  const [isAddCms, setisAddCms] = useState(false);\n  const [start, setStart] = useState(0);\n  const [searchValue, setSearchValue] = useState('');\n  const [statusChange, setStatusChange] = useState('');\n  const [currentStore, setCurrentStore] = useAtom(currentStoreId);\n  const [tableData, setTableData] = useAtom(currentTableData);\n  const [isAvailable, setIsAvailable] = useState(false);\n  const [newRecord, setNewRecord] = useState(0);\n  const [totalCount, setTotalCount] = useState(0);\n  const [visible, setVisible] = useState(false);\n\n  const [isEditCms, setIsEditCms] = useState({ isOpen: false, cmsId: '' });\n  const [allCms, setAllCms] = useState([]);\n\n  const PageRoutes = [\n    {\n      path: '/',\n      breadcrumbName: 'Dashboard',\n    },\n    {\n      path: '/tables',\n      breadcrumbName: 'Tables',\n    },\n  ];\n\n  const getAllData = ({ search, type, isAvailable }) => {\n    getAllTables({ start, limit: 12, search, type, isAvailable, store_id: currentStore })\n      .then((res) => {\n        if (res) {\n          setAllCms(res?.data?.rows);\n          setTotalCount(res?.data?.count);\n        }\n      })\n      .catch((err) => console.log('err', err));\n  };\n\n  useEffect(() => {\n    getAllData({ search: searchValue, type: statusChange, isAvailable });\n  }, [searchValue, statusChange, isAvailable, currentStore, newRecord, start]);\n\n  const onSearch = (value) => {\n    setSearchValue(value);\n  };\n  const handleStatusChange = (value) => {\n    setStatusChange(value);\n  };\n  const geIsActive = (value) => {\n    setIsAvailable(!isAvailable);\n  };\n  const changeStart = (value) => {\n    let s = 10 * (value - 1);\n    setStart(s);\n  };\n\n  const showDrawer = () => {\n    setVisible(true);\n  };\n\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  return (\n    <>\n      <PageHeader\n        title=\"Tables\"\n        routes={PageRoutes}\n        className=\"flex items-center justify-between px-8 xl:px-[15px] pt-2 pb-6 sm:pb-[30px] bg-transparent sm:flex-col\"\n      />\n      <GlobalUtilityStyle className=\"p-3\">\n        <Row gutter={16}>\n          <Col sm={24} xs={24} lg={24} className=\"\">\n            <Cards\n              title={\n                <div>\n                  <Row gutter={[16, 16]} align=\"middle\">\n                    <Col xs={24} sm={12} md={6}>\n                      <Select\n                        style={{\n                          width: '100%', // Full width for better responsiveness\n                        }}\n                        size=\"medium\"\n                        placeholder=\"Status\"\n                        onChange={handleStatusChange}\n                      >\n                        <Option value=\"\">All</Option>\n                        <Option value=\"booked\">Booked</Option>\n                        <Option value=\"available\">Available</Option>\n                        <Option value=\"service\">Service</Option>\n                        <Option value=\"preparing\">Preparing</Option>\n                      </Select>\n                    </Col>\n                    <Col xs={24} sm={8} md={6}>\n                      <Search\n                        placeholder=\"Table number\"\n                        allowClear\n                        enterButton=\"Search\"\n                        size=\"medium\"\n                        onSearch={onSearch}\n                        style={{ width: '100%' }} // Full width for better responsiveness\n                      />\n                    </Col>\n                  </Row>\n                </div>\n              }\n              moreBtn={\n                <Button type=\"primary\" onClick={() => setisAddCms(true)}>\n                  Add\n                </Button>\n              }\n            >\n              <Cards1\n                allData={allCms}\n                setIsEditCms={setIsEditCms}\n                setTableData={setTableData}\n                setVisible={setVisible}\n              />\n              <div className=\"mt-2 flex justify-end\">\n                <Pagination\n                  // current={1}\n                  pageSize={12}\n                  total={totalCount} // Total number of items\n                  onChange={changeStart}\n                  showSizeChanger={false} // Allows changing the number of items per page\n                  // pageSizeOptions={['10']} // Page size options\n                />\n              </div>\n            </Cards>\n          </Col>\n        </Row>\n      </GlobalUtilityStyle>\n\n      <Modal\n        title={`${isAddCms ? 'Add Tables' : 'Edit Table'}`}\n        destroyOnClose\n        open={isAddCms || isEditCms.isOpen}\n        width={1024}\n        // onOk={handleAddCmss}\n        footer={false}\n        onCancel={() => {\n          setisAddCms(false);\n          setIsEditCms({ isOpen: false, cmsId: '' });\n        }}\n      >\n        <AddCms\n          setisAddCms={setisAddCms}\n          getAllData={getAllData}\n          isEditCms={isEditCms}\n          setIsEditCms={setIsEditCms}\n          currentStore={currentStore}\n          newRecord={newRecord}\n          setNewRecord={setNewRecord}\n        />\n      </Modal>\n      <Drawer\n        title={tableData.current_order ? 'Update Order #' + tableData.current_order : 'Add Order'}\n        placement=\"right\"\n        onClose={onClose}\n        open={visible}\n        width={window.innerWidth < 768 ? 300 : 600}\n      >\n        <AddOrder\n          setVisible={setVisible}\n          tableData={tableData}\n          visible={visible}\n          allCms={allCms}\n          setAllCms={setAllCms}\n          // setTableData={setTableData}\n          currentStore={currentStore}\n        />\n      </Drawer>\n    </>\n  );\n};\n\nexport default Cms;\n","import { callApi } from '../apiUtils';\n\nconst addCms = async ({ body }) => {\n  const response = await callApi.post(`/orders`, body);\n  return response;\n};\n\nconst getAllCms = async ({ start, limit, status, search, dates, currentStore }) => {\n  let searchQuery = search ? `&search=${search}` : '';\n  let statusQuery = status ? `&status=${status}` : '';\n  let storeQuery = currentStore ? `&store_id=${currentStore}` : '';\n  let dateQuery = '';\n  if (dates.length === 2) {\n    dateQuery = `&start_date=${dates[0]}&end_date=${dates[1]}`;\n  }\n  const response = await callApi.get(\n    `/orders?start=${start}&limit=${limit}${searchQuery}${statusQuery}${dateQuery}${storeQuery}`,\n  );\n  return response;\n};\n\nconst getSingleCms = async ({ id }) => {\n  const response = await callApi.get(`/orders/${id}`);\n  return response;\n};\n\nconst updateCms = async ({ id, body }) => {\n  const response = await callApi.patch(`/orders/${id}`, body);\n  return response;\n};\n\nconst deleteCms = async ({ id }) => {\n  const response = await callApi.delete(`/orders/${id}`);\n  return response;\n};\n\nexport { addCms, getAllCms, getSingleCms, updateCms, deleteCms };\n","import { callApi } from '../apiUtils';\n\nconst addCms = async ({ body }) => {\n  const response = await callApi.post(`/restroItems`, body);\n  return response;\n};\n\nconst getAllCms = async ({ start = 0, limit = 10, search }) => {\n  let searchQuery = search ? `&search=${search}` : '';\n  const response = await callApi.get(`/restroItems?start=${start}&limit=${limit}${searchQuery}`);\n  return response;\n};\n\nconst getSingleCms = async ({ id }) => {\n  const response = await callApi.get(`/restroItems/${id}`);\n  return response;\n};\n\nconst updateCms = async ({ id, body }) => {\n  const response = await callApi.patch(`/restroItems/${id}`, body);\n  return response;\n};\n\nconst deleteCms = async ({ id }) => {\n  const response = await callApi.delete(`/restroItems/${id}`);\n  return response;\n};\n\nexport { addCms, getAllCms, getSingleCms, updateCms, deleteCms };\n","import { callApi } from '../apiUtils';\n\nconst addCms = async ({ body }) => {\n  const response = await callApi.post(`/tables`, body);\n  return response;\n};\n\nconst getAllTables = async ({ start = 0, limit = 10, search, type, isAvailable, store_id }) => {\n  let searchQuery = search ? `&search=${search}` : ``;\n  let typeQuery = type ? `&status=${type}` : ``;\n  let storeQuery = store_id ? `&store_id=${store_id}` : ``;\n  let isAvailableQ = isAvailable ? `&isAvailable=${isAvailable}` : ``;\n\n  const response = await callApi.get(\n    `/tables?start=${start}&limit=${limit}${searchQuery}${typeQuery}${isAvailableQ}${storeQuery}`,\n  );\n  return response;\n};\n\nconst getSingleCms = async ({ id }) => {\n  const response = await callApi.get(`/tables/${id}`);\n  return response;\n};\n\nconst updateCms = async ({ id, body }) => {\n  const response = await callApi.patch(`/tables/${id}`, body);\n  return response;\n};\n\nconst deleteCms = async ({ id }) => {\n  const response = await callApi.delete(`/tables/${id}`);\n  return response;\n};\n\nexport { addCms, getAllTables, getSingleCms, updateCms, deleteCms };\n"],"names":["Title","Text","Typography","_ref","_orderDetails$organis","_orderDetails$organis2","orderDetails","kotRef","useRef","billRef","storeData","setStoreData","useAtom","currentStoreData","currentDateTime","Date","toLocaleString","tax","setTax","useState","Number","total","_jsxs","children","ref","style","padding","width","backgroundColor","margin","fontFamily","border","_jsx","level","textAlign","marginBottom","name","display","fontSize","address","phoneNumber","organisation","gst","Divider","dashed","orderNumber","waiterName","tableNumber","Table","dataSource","items","columns","title","dataIndex","key","align","pagination","size","Button","marginTop","onClick","generateKOT","content","current","html2canvas","then","canvas","imgData","toDataURL","pdf","jsPDF","height","addImage","save","render","text","concat","toFixed","record","quantity","price","generateBill","pdfOutput","output","url","URL","createObjectURL","printJS","printable","type","documentTitle","e","message","warning","Option","Select","setisAddCms","getAllData","setIsEditCms","isEditCms","currentStore","setNewRecord","newRecord","loading","setLoading","form","Form","useForm","useEffect","cmsId","getSingleCms","id","res","setFieldsValue","tables","data","catch","err","console","log","_Fragment","Spin","spinning","layout","onFinish","values","body","map","table","store_id","_body$","_body$2","_body$3","bosyData","no_of_seats","status","table_number","updateCms","isOpen","success","_addCms","addCms","initialValues","List","fields","_ref2","add","remove","field","index","Row","gutter","Col","xs","sm","md","lg","Item","label","fieldKey","rules","Input","placeholder","required","min","InputNumber","value","span","length","DeleteOutlined","color","cursor","block","marginRight","htmlType","tableData","setVisible","visible","allCms","setAllCms","item","setItem","bill","setBill","search","setSearch","deletedItem","setDeletedItem","setOrderDetails","subtotal","updateTableStatus","orderId","dd","d","current_order","getAllCms","rows","error","resetFields","table_id","ooo","order_items","total_price","tax_precent","Organisation","_err$data","getAllItems","_data$order_items","getFieldsValue","t","getFieldValue","discount","setFieldValue","onChange","toString","_res$data","autoComplete","precision","initialValue","max","valuePropName","Switch","checkedChildren","unCheckedChildren","_ref3","restField","borderColor","AutoComplete","onSearch","onSelect","selectedItem","find","item_name","options","item_code","MinusCircleOutlined","itemToBeDeleted","push","deleted","className","OrderPDF","Panel","Collapse","allData","setTableData","room","Card","Tag","EyeOutlined","PlusOutlined","bordered","boxShadow","borderRadius","strong","EditFilled","Popconfirm","onConfirm","okText","cancelText","DeleteFilled","Search","Cms","isAddCms","start","setStart","searchValue","setSearchValue","statusChange","setStatusChange","setCurrentStore","currentStoreId","currentTableData","isAvailable","setIsAvailable","totalCount","setTotalCount","getAllTables","limit","_res$data2","count","PageHeader","routes","path","breadcrumbName","GlobalUtilityStyle","Cards","allowClear","enterButton","moreBtn","Cards1","Pagination","pageSize","showSizeChanger","Modal","destroyOnClose","open","footer","onCancel","AddCms","Drawer","placement","onClose","window","innerWidth","AddOrder","async","callApi","post","dates","searchQuery","statusQuery","storeQuery","dateQuery","get","_ref4","patch","deleteCms","_ref5","delete","typeQuery","isAvailableQ"],"sourceRoot":""}