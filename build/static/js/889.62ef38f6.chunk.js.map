{"version":3,"file":"static/js/889.62ef38f6.chunk.js","mappings":"mTAOA,MAAM,MAAEA,GAAUC,EAAAA,GACZ,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAYC,EAAAA,EA6QpC,EA3QkBC,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACtB,MAAOC,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAS,CAAC,IAC/CC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,CAAC,IACrCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,CAAC,IAEpCK,EAAAA,EAAAA,YAAU,KCTcC,gBACDC,EAAAA,EAAQC,IAAI,wBDSjCC,GACGC,MAAMC,IAAO,IAADC,EACXb,EAAkBY,EAAEE,MACpBT,EAAe,QAAPQ,EAACD,EAAEE,YAAI,IAAAD,OAAA,EAANA,EAAQT,MAAM,IAExBW,OAAOC,IACNC,QAAQC,IAAIF,EAAE,ICpBAT,gBACGC,EAAAA,EAAQC,IAAI,oBDqBjCU,GACGR,MAAMC,IACLT,EAAaS,EAAEE,KAAK,IAErBC,OAAOC,IACNC,QAAQC,IAAIF,EAAE,GACd,GACH,IAGH,MAAMI,GACK,OAATlB,QAAS,IAATA,GAAiB,QAARX,EAATW,EAAWmB,cAAM,IAAA9B,OAAR,EAATA,EAAmB+B,QAAO,CAACC,EAAKC,KAC9BD,EAAIC,EAAKC,MAAQD,EAAKE,MACfH,IACN,CAAC,KAAM,CAAC,EAEPI,GACU,OAAd5B,QAAc,IAAdA,GAAsB,QAARP,EAAdO,EAAgBsB,cAAM,IAAA7B,OAAR,EAAdA,EAAwB8B,QAAO,CAACC,EAAKC,KACnCD,EAAIC,EAAKC,MAAQD,EAAKE,MACfH,IACN,CAAC,KAAM,CAAC,EAgBPK,EAAqB,CACzBd,KAduB,KACV,OAATZ,QAAS,IAATA,GAA0B,QAAjBT,EAATS,EAAW2B,uBAAe,IAAApC,OAAjB,EAATA,EAA4BqC,KAAKN,IAAI,CACvCO,MAAM,SAADC,OAAWR,EAAKS,WACrBP,MAAOF,EAAKU,IACZT,KAAM,iBACD,OACM,OAATvB,QAAS,IAATA,GAAwB,QAAfR,EAATQ,EAAWiC,qBAAa,IAAAzC,OAAf,EAATA,EAA0BoC,KAAKN,IAAI,CACrCO,MAAM,SAADC,OAAWR,EAAKS,WACrBP,MAAOF,EAAKU,IACZT,KAAM,eACD,IAKPW,OAAQ,QACRC,OAAQ,QACRC,YAAa,OACbC,QAAQ,EACRC,OAAQ,IACRC,MAAO,CAAEC,KAAM,EAAGC,MAAO,UACzBC,UAAW,CACTC,OAAQ,CACND,UAAW,UACXE,SAAU,MAGdC,QAAS,CACPC,aAAa,EACbC,QAAQ,IAkBNC,EAA0B,CAC9BpC,KAd4B,KACV,OAAdf,QAAc,IAAdA,GAA6B,QAAfJ,EAAdI,EAAgBoD,qBAAa,IAAAxD,OAAf,EAAdA,EAA+BmC,KAAKN,IAAI,CAC1CO,MAAM,SAADC,OAAWR,EAAKS,WACrBP,MAAOF,EAAK4B,MACZ3B,KAAM,eACD,OACW,OAAd1B,QAAc,IAAdA,GAA6B,QAAfH,EAAdG,EAAgBoC,qBAAa,IAAAvC,OAAf,EAAdA,EAA+BkC,KAAKN,IAAI,CAC1CO,MAAM,SAADC,OAAWR,EAAKS,WACrBP,MAAOF,EAAKU,IACZT,KAAM,eACD,IAKPW,OAAQ,QACRC,OAAQ,QACRC,YAAa,OACbC,QAAQ,EACRC,OAAQ,IACRC,MAAO,CAAEC,KAAM,EAAGC,MAAO,WACzBC,UAAW,CACTC,OAAQ,CACND,UAAW,UACXE,SAAU,MAGdC,QAAS,CACPC,aAAa,EACbC,QAAQ,IAIZ,SAASI,EAAYC,GAAsB,IAAhBC,EAASC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACrC,MAAMG,EAAQL,EAAKM,MAAM,KAEzB,OAAID,EAAMF,OAASF,EACVI,EAAME,MAAM,EAAGN,GAAWO,KAAK,KAAO,MAGxCR,CACT,CAGW,OAATpD,QAAS,IAATA,GAAyB,QAAhBL,EAATK,EAAW6D,sBAAc,IAAAlE,GAAzBA,EAA2BiC,KAAKN,IAAI,CAClCwC,SAAUxC,EAAKwC,SACfZ,MAAOa,SAASzC,EAAK4B,MAAO,QAwBhB,OAAdrD,QAAc,IAAdA,GAA4B,QAAdD,EAAdC,EAAgBmE,oBAAY,IAAApE,GAA5BA,EAA8BgC,KAAKN,IAAI,CACrC2C,KAAMd,EAAY7B,EAAK2C,MACvBf,MAAOa,SAASzC,EAAK4B,MAAO,QAsBhC,OACEgB,EAAAA,EAAAA,MAAC/E,EAAAA,EAAM,CAAAgF,SAAA,EACLC,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACC,UAAUF,EAAAA,EAAAA,KAAA,OAAAD,SAAK,kBACzBD,EAAAA,EAAAA,MAAChF,EAAO,CAACqF,MAAO,CAAEC,QAAS,QAASL,SAAA,EAClCD,EAAAA,EAAAA,MAACO,EAAAA,EAAG,CAACC,OAAQ,GAAGP,SAAA,EACdC,EAAAA,EAAAA,KAACO,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAEX,UACzBC,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAAAZ,UACHC,EAAAA,EAAAA,KAACY,EAAAA,EAAS,CACRC,MAAM,kBACNzD,OAAkB,OAAXN,QAAW,IAAXA,OAAW,EAAXA,EAAagE,iBAAkB,EACtCC,QAAQf,EAAAA,EAAAA,KAACgB,EAAAA,EAAY,IACrBC,WAAY,CAAEC,MAAO,kBAI3BlB,EAAAA,EAAAA,KAACO,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAEX,UACzBC,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAAAZ,UACHC,EAAAA,EAAAA,KAACY,EAAAA,EAAS,CACRC,MAAM,cACNzD,OAAkB,OAAXN,QAAW,IAAXA,OAAW,EAAXA,EAAc,iBAAkB,EACvCiE,QAAQf,EAAAA,EAAAA,KAACmB,EAAAA,EAAY,IACrBF,WAAY,CAAEC,MAAO,kBAI3BlB,EAAAA,EAAAA,KAACO,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAEX,UACzBC,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAAAZ,UACHC,EAAAA,EAAAA,KAACY,EAAAA,EAAS,CACRC,MAAM,kBACNzD,OAAkB,OAAXN,QAAW,IAAXA,OAAW,EAAXA,EAAasE,kBAAmB,EACvCL,QAAQf,EAAAA,EAAAA,KAACqB,EAAAA,EAAY,IACrBJ,WAAY,CAAEC,MAAO,kBAI3BlB,EAAAA,EAAAA,KAACO,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAEX,UACzBC,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAAAZ,UACHC,EAAAA,EAAAA,KAACY,EAAAA,EAAS,CACRC,MAAM,gBACNzD,OAAkB,OAAXN,QAAW,IAAXA,OAAW,EAAXA,EAAawE,UAAW,EAC/BP,OAAO,SACPE,WAAY,CAAEC,MAAO,qBAM7BpB,EAAAA,EAAAA,MAACO,EAAAA,EAAG,CAACC,OAAQ,GAAIH,MAAO,CAAEoB,UAAW,IAAKxB,SAAA,EACxCC,EAAAA,EAAAA,KAACO,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAEX,UACzBC,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAAAZ,UACHC,EAAAA,EAAAA,KAACY,EAAAA,EAAS,CAACC,MAAM,eAAezD,OAAY,OAALtB,QAAK,IAALA,OAAK,EAALA,EAAOA,QAAS,EAAGiF,OAAO,SAAIE,WAAY,CAAEC,MAAO,kBAG9FlB,EAAAA,EAAAA,KAACO,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAEX,UACzBC,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAAAZ,UACHC,EAAAA,EAAAA,KAACY,EAAAA,EAAS,CACRC,MAAM,eACNzD,OAAuB,OAAhBC,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBmE,eAAgB,EACzCT,QAAQf,EAAAA,EAAAA,KAACgB,EAAAA,EAAY,IACrBC,WAAY,CAAEC,MAAO,kBAI3BlB,EAAAA,EAAAA,KAACO,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAEX,UACzBC,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAAAZ,UACHC,EAAAA,EAAAA,KAACY,EAAAA,EAAS,CACRC,MAAM,mBACNzD,OAAuB,OAAhBC,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBoE,mBAAoB,EAC7CV,QAAQf,EAAAA,EAAAA,KAACmB,EAAAA,EAAY,IACrBF,WAAY,CAAEC,MAAO,kBAI3BlB,EAAAA,EAAAA,KAACO,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAEX,UACzBC,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAAAZ,UACHC,EAAAA,EAAAA,KAACY,EAAAA,EAAS,CACRC,MAAM,qBACNzD,OAAuB,OAAhBC,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBiE,UAAW,EACpCP,OAAO,SACPE,WAAY,CAAEC,MAAO,qBAM7BpB,EAAAA,EAAAA,MAACO,EAAAA,EAAG,CAACC,OAAQ,GAAIH,MAAO,CAAEoB,UAAW,IAAKxB,SAAA,EACxCC,EAAAA,EAAAA,KAACO,EAAAA,EAAG,CAACC,GAAI,GAAIE,GAAI,GAAGX,UAClBC,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAACE,MAAM,oCAAmCd,UAC7CC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAI,IAAKpE,SAGd0C,EAAAA,EAAAA,KAACO,EAAAA,EAAG,CAACC,GAAI,GAAIE,GAAI,GAAGX,UAClBC,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAACE,MAAM,uCAAsCd,UAChDC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAI,IAAK9C,gBAKX,C,uFE/Qb,MAAM+C,EAAS1F,UAAqB,IAAd,KAAE2F,GAAMC,EAE5B,aADuB3F,EAAAA,EAAQ4F,KAAK,UAAWF,EAChC,EAGXG,EAAY9F,UAAkE,IAA3D,MAAE+F,EAAK,MAAEC,EAAK,OAAEC,EAAM,OAAEC,EAAM,MAAEC,EAAK,aAAEC,GAAcC,EACxEC,EAAcJ,EAAM,WAAAzE,OAAcyE,GAAW,GAC7CK,EAAcN,EAAM,WAAAxE,OAAcwE,GAAW,GAC7CO,EAAaJ,EAAY,aAAA3E,OAAgB2E,GAAiB,GAC1DK,EAAY,GACK,IAAjBN,EAAMjD,SACRuD,EAAS,eAAAhF,OAAkB0E,EAAM,GAAE,cAAA1E,OAAa0E,EAAM,KAKxD,aAHuBlG,EAAAA,EAAQC,IAAI,iBAADuB,OACfsE,EAAK,WAAAtE,OAAUuE,GAAKvE,OAAG6E,GAAW7E,OAAG8E,GAAW9E,OAAGgF,GAAShF,OAAG+E,GAEnE,EAGXE,EAAe1G,UAAmB,IAAZ,GAAE2G,GAAIC,EAEhC,aADuB3G,EAAAA,EAAQC,IAAI,WAADuB,OAAYkF,GAC/B,EAOXE,EAAY7G,UAAyB,IAAlB,GAAE2G,EAAE,KAAEhB,GAAMmB,EAEnC,aADuB7G,EAAAA,EAAQ8G,MAAM,WAADtF,OAAYkF,GAAMhB,EACvC,EAGXqB,EAAYhH,UAAmB,IAAZ,GAAE2G,GAAIM,EAE7B,aADuBhH,EAAAA,EAAQiH,OAAO,WAADzF,OAAYkF,GAClC,C","sources":["container/dashboard/newDashboard.jsx","utility/services/dashboard.js","utility/services/orders.js"],"sourcesContent":["import React, { useEffect, useState, Suspense } from 'react';\nimport { Row, Col, Card, Statistic, Layout, Typography } from 'antd';\nimport { Line, Bar } from '@ant-design/charts';\nimport { UserOutlined, ShopOutlined, HomeOutlined } from '@ant-design/icons';\nimport { getRestrauntStats, getHotelStats } from '../../utility/services/dashboard';\nimport { getTodaysTotal } from '../../utility/services/orders';\n\nconst { Title } = Typography;\nconst { Header, Footer, Content } = Layout;\n\nconst Dashboard = () => {\n  const [restaurantData, setRestaurantData] = useState({});\n  const [hotelData, setHotelData] = useState({});\n  const [total, setTotal] = useState({});\n\n  useEffect(() => {\n    getRestrauntStats()\n      .then((d) => {\n        setRestaurantData(d.data);\n        setTotal(d.data?.total);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n    getHotelStats()\n      .then((d) => {\n        setHotelData(d.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }, []);\n\n  // Safely access hotelData and restaurantData properties\n  const hotelCounts =\n    hotelData?.counts?.reduce((acc, item) => {\n      acc[item.type] = item.value;\n      return acc;\n    }, {}) || {};\n\n  const restaurantCounts =\n    restaurantData?.counts?.reduce((acc, item) => {\n      acc[item.type] = item.value;\n      return acc;\n    }, {}) || {};\n\n  // Line chart for hotel monthly bookings and income\n  const hotelMonthlyData = [\n    ...(hotelData?.monthlyBookings?.map((item) => ({\n      month: `Month ${item.date_part}`,\n      value: item.sum,\n      type: 'Bookings',\n    })) || []),\n    ...(hotelData?.monthlyIncome?.map((item) => ({\n      month: `Month ${item.date_part}`,\n      value: item.sum,\n      type: 'Income',\n    })) || []),\n  ];\n\n  const hotelMonthlyConfig = {\n    data: hotelMonthlyData,\n    xField: 'month',\n    yField: 'value',\n    seriesField: 'type',\n    smooth: true,\n    height: 300,\n    point: { size: 5, shape: 'circle' },\n    animation: {\n      appear: {\n        animation: 'path-in',\n        duration: 500,\n      },\n    },\n    tooltip: {\n      showMarkers: true,\n      shared: true,\n    },\n  };\n\n  // Line chart for restaurant monthly orders and income\n  const restaurantMonthlyData = [\n    ...(restaurantData?.monthlyOrders?.map((item) => ({\n      month: `Month ${item.date_part}`,\n      value: item.count,\n      type: 'Orders',\n    })) || []),\n    ...(restaurantData?.monthlyIncome?.map((item) => ({\n      month: `Month ${item.date_part}`,\n      value: item.sum,\n      type: 'Income',\n    })) || []),\n  ];\n\n  const restaurantMonthlyConfig = {\n    data: restaurantMonthlyData,\n    xField: 'month',\n    yField: 'value',\n    seriesField: 'type',\n    smooth: true,\n    height: 300,\n    point: { size: 5, shape: 'diamond' },\n    animation: {\n      appear: {\n        animation: 'path-in',\n        duration: 500,\n      },\n    },\n    tooltip: {\n      showMarkers: true,\n      shared: true,\n    },\n  };\n\n  function shortenText(text, wordLimit = 2) {\n    const words = text.split(' ');\n\n    if (words.length > wordLimit) {\n      return words.slice(0, wordLimit).join(' ') + '...';\n    }\n\n    return text;\n  }\n  // Bar chart for hotel room bookings\n  const hotelRoomsData =\n    hotelData?.maxBookedRooms?.map((item) => ({\n      roomType: item.roomType,\n      count: parseInt(item.count, 10),\n    })) || [];\n\n  const hotelRoomsConfig = {\n    data: hotelRoomsData,\n    xField: 'roomType',\n    yField: 'count',\n    seriesField: 'roomType',\n    colorField: 'roomType',\n    height: 300,\n    label: { style: { fill: '#aaa' } },\n    tooltip: {\n      showMarkers: true,\n    },\n    animation: {\n      appear: {\n        animation: 'scale-in-y',\n        duration: 500,\n      },\n    },\n  };\n\n  // Bar chart for top 5 products in restaurant\n  const topProductsData =\n    restaurantData?.top5Products?.map((item) => ({\n      name: shortenText(item.name),\n      count: parseInt(item.count, 10),\n    })) || [];\n\n  const topProductsConfig = {\n    data: topProductsData,\n    xField: 'name',\n    yField: 'count',\n    seriesField: 'name',\n    colorField: 'name',\n    height: 300,\n    label: { style: { fill: '#aaa' } },\n    tooltip: {\n      showMarkers: true,\n    },\n    animation: {\n      appear: {\n        animation: 'scale-in-x',\n        duration: 500,\n      },\n    },\n  };\n\n  return (\n    <Layout>\n      <Suspense fallback={<div>Loading...</div>}></Suspense>\n      <Content style={{ padding: '20px' }}>\n        <Row gutter={16}>\n          <Col xs={24} sm={12} lg={6}>\n            <Card>\n              <Statistic\n                title=\"Hotel Customers\"\n                value={hotelCounts?.customer_count || 0}\n                prefix={<UserOutlined />}\n                valueStyle={{ color: '#3f8600' }}\n              />\n            </Card>\n          </Col>\n          <Col xs={24} sm={12} lg={6}>\n            <Card>\n              <Statistic\n                title=\"Total Rooms\"\n                value={hotelCounts?.['total rooms'] || 0}\n                prefix={<HomeOutlined />}\n                valueStyle={{ color: '#1890ff' }}\n              />\n            </Card>\n          </Col>\n          <Col xs={24} sm={12} lg={6}>\n            <Card>\n              <Statistic\n                title=\"Available Rooms\"\n                value={hotelCounts?.available_rooms || 0}\n                prefix={<ShopOutlined />}\n                valueStyle={{ color: '#cf1322' }}\n              />\n            </Card>\n          </Col>\n          <Col xs={24} sm={12} lg={6}>\n            <Card>\n              <Statistic\n                title=\"Hotel Revenue\"\n                value={hotelCounts?.revenue || 0}\n                prefix=\"₹\"\n                valueStyle={{ color: '#faad14' }}\n              />\n            </Card>\n          </Col>\n        </Row>\n\n        <Row gutter={16} style={{ marginTop: 16 }}>\n          <Col xs={24} sm={12} lg={6}>\n            <Card>\n              <Statistic title=\"Todays Sales\" value={total?.total || 0} prefix=\"₹\" valueStyle={{ color: '#faad14' }} />\n            </Card>\n          </Col>\n          <Col xs={24} sm={12} lg={6}>\n            <Card>\n              <Statistic\n                title=\"Total Orders\"\n                value={restaurantCounts?.total_orders || 0}\n                prefix={<UserOutlined />}\n                valueStyle={{ color: '#722ed1' }}\n              />\n            </Card>\n          </Col>\n          <Col xs={24} sm={12} lg={6}>\n            <Card>\n              <Statistic\n                title=\"Available Tables\"\n                value={restaurantCounts?.available_tables || 0}\n                prefix={<HomeOutlined />}\n                valueStyle={{ color: '#1890ff' }}\n              />\n            </Card>\n          </Col>\n          <Col xs={24} sm={12} lg={6}>\n            <Card>\n              <Statistic\n                title=\"Restaurant Revenue\"\n                value={restaurantCounts?.revenue || 0}\n                prefix=\"₹\"\n                valueStyle={{ color: '#faad14' }}\n              />\n            </Card>\n          </Col>\n        </Row>\n\n        <Row gutter={16} style={{ marginTop: 16 }}>\n          <Col xs={24} lg={12}>\n            <Card title=\"Hotel Monthly Bookings and Income\">\n              <Line {...hotelMonthlyConfig} />\n            </Card>\n          </Col>\n          <Col xs={24} lg={12}>\n            <Card title=\"Restaurant Monthly Orders and Income\">\n              <Line {...restaurantMonthlyConfig} />\n            </Card>\n          </Col>\n        </Row>\n      </Content>\n    </Layout>\n  );\n};\n\nexport default Dashboard;\n","import { callApi } from '../apiUtils';\n\nconst getHotelStats = async () => {\n  const response = await callApi.get(`/dashboard/hotel`);\n  return response;\n};\nconst getRestrauntStats = async () => {\n  const response = await callApi.get(`/dashboard/restraunt`);\n  return response;\n};\n\nexport { getRestrauntStats, getHotelStats };\n","import { callApi } from '../apiUtils';\n\nconst addCms = async ({ body }) => {\n  const response = await callApi.post(`/orders`, body);\n  return response;\n};\n\nconst getAllCms = async ({ start, limit, status, search, dates, currentStore }) => {\n  let searchQuery = search ? `&search=${search}` : '';\n  let statusQuery = status ? `&status=${status}` : '';\n  let storeQuery = currentStore ? `&store_id=${currentStore}` : '';\n  let dateQuery = '';\n  if (dates.length === 2) {\n    dateQuery = `&start_date=${dates[0]}&end_date=${dates[1]}`;\n  }\n  const response = await callApi.get(\n    `/orders?start=${start}&limit=${limit}${searchQuery}${statusQuery}${dateQuery}${storeQuery}`,\n  );\n  return response;\n};\n\nconst getSingleCms = async ({ id }) => {\n  const response = await callApi.get(`/orders/${id}`);\n  return response;\n};\nconst getTodaysTotal = async () => {\n  const response = await callApi.get(`/orders/today-total`);\n  return response;\n};\n\nconst updateCms = async ({ id, body }) => {\n  const response = await callApi.patch(`/orders/${id}`, body);\n  return response;\n};\n\nconst deleteCms = async ({ id }) => {\n  const response = await callApi.delete(`/orders/${id}`);\n  return response;\n};\n\nexport { addCms, getAllCms, getSingleCms, updateCms, deleteCms, getTodaysTotal };\n"],"names":["Title","Typography","Header","Footer","Content","Layout","Dashboard","_hotelData$counts","_restaurantData$count","_hotelData$monthlyBoo","_hotelData$monthlyInc","_restaurantData$month","_restaurantData$month2","_hotelData$maxBookedR","_restaurantData$top5P","restaurantData","setRestaurantData","useState","hotelData","setHotelData","total","setTotal","useEffect","async","callApi","get","getRestrauntStats","then","d","_d$data","data","catch","e","console","log","getHotelStats","hotelCounts","counts","reduce","acc","item","type","value","restaurantCounts","hotelMonthlyConfig","monthlyBookings","map","month","concat","date_part","sum","monthlyIncome","xField","yField","seriesField","smooth","height","point","size","shape","animation","appear","duration","tooltip","showMarkers","shared","restaurantMonthlyConfig","monthlyOrders","count","shortenText","text","wordLimit","arguments","length","undefined","words","split","slice","join","maxBookedRooms","roomType","parseInt","top5Products","name","_jsxs","children","_jsx","Suspense","fallback","style","padding","Row","gutter","Col","xs","sm","lg","Card","Statistic","title","customer_count","prefix","UserOutlined","valueStyle","color","HomeOutlined","available_rooms","ShopOutlined","revenue","marginTop","total_orders","available_tables","Line","addCms","body","_ref","post","getAllCms","start","limit","status","search","dates","currentStore","_ref2","searchQuery","statusQuery","storeQuery","dateQuery","getSingleCms","id","_ref3","updateCms","_ref4","patch","deleteCms","_ref5","delete"],"sourceRoot":""}