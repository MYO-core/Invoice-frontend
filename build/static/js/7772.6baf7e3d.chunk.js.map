{"version":3,"file":"static/js/7772.6baf7e3d.chunk.js","mappings":"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","sources":["static/img/icon/home.svg","components/buttons/styled.js","components/buttons/buttons.js","components/page-headers/style.js","components/page-headers/page-headers.js","container/profileNew/index.jsx","utility/services/upload.js"],"sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgHome(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 14,\n    height: 15.574,\n    viewBox: \"0 0 14 15.574\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"estate\",\n    d: \"M16.222,6.661h0L11.555,2.57a2.333,2.333,0,0,0-3.111,0L3.778,6.661A2.333,2.333,0,0,0,3,8.419v6.8A2.333,2.333,0,0,0,5.333,17.55h9.333A2.333,2.333,0,0,0,17,15.217V8.411a2.333,2.333,0,0,0-.778-1.75Zm-4.667,9.333H8.444V12.106a.778.778,0,0,1,.778-.778h1.556a.778.778,0,0,1,.778.778Zm3.889-.778a.778.778,0,0,1-.778.778H13.111V12.106a2.333,2.333,0,0,0-2.333-2.333H9.222a2.333,2.333,0,0,0-2.333,2.333v3.889H5.333a.778.778,0,0,1-.778-.778V8.411a.778.778,0,0,1,.264-.583L9.487,3.745a.778.778,0,0,1,1.027,0L15.18,7.828a.778.778,0,0,1,.264.583Z\",\n    transform: \"translate(-3 -1.976)\",\n    fill: \"currentColor\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgHome);\nexport default __webpack_public_path__ + \"static/media/home.f87e389a5c1850fe48b55156d6a0d7b7.svg\";\nexport { ForwardRef as ReactComponent };","/* eslint-disable no-shadow */\nimport { Button } from 'antd';\nimport Styled from 'styled-components';\n\nconst ButtonGroup = Button.Group;\n\nconst ButtonStyled = Styled(Button)`\n    \n`;\n\nconst ButtonStyledGroup = Styled(ButtonGroup)`\n    \n`;\n\nexport { ButtonStyled, ButtonStyledGroup };\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { ButtonStyled, ButtonStyledGroup } from './styled';\n\n// @Todo props spreading\n\nfunction Button(props) {\n  const {\n    type,\n    shape,\n    icon,\n    size,\n    outlined,\n    ghost,\n    transparented,\n    raised,\n    squared,\n    color,\n    social,\n    load,\n    children,\n    ...rest\n  } = props;\n  const [state, setState] = useState({\n    loading: false,\n  });\n\n  const enterLoading = () => {\n    setState({ loading: true });\n  };\n\n  return (\n    <ButtonStyled\n      squared={squared}\n      outlined={outlined ? 1 : 0}\n      ghost={ghost}\n      transparent={transparented ? 1 : 0}\n      raised={raised ? 1 : 0}\n      data={type}\n      size={size}\n      shape={shape}\n      type={type}\n      icon={icon}\n      color={color}\n      social={social}\n      onClick={load && enterLoading}\n      loading={state.loading}\n      {...rest}\n    >\n      {children}\n    </ButtonStyled>\n  );\n}\n\nButton.defaultProps = {\n  type: 'default',\n};\n\nButton.propTypes = {\n  type: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'info',\n    'warning',\n    'danger',\n    'link',\n    'dark',\n    'light',\n    'gray',\n    'white',\n    'dashed',\n    'error',\n    'extra-light',\n    'default',\n  ]),\n  shape: PropTypes.string,\n  icon: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  outlined: PropTypes.bool,\n  transparented: PropTypes.bool,\n  raised: PropTypes.bool,\n  squared: PropTypes.bool,\n  social: PropTypes.bool,\n  load: PropTypes.bool,\n  ghost: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.node]),\n};\n\nfunction BtnGroup({ children }) {\n  return <ButtonStyledGroup>{children}</ButtonStyledGroup>;\n}\n\nBtnGroup.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.node).isRequired,\n};\n\nexport { Button, BtnGroup };\n","import { PageHeader } from 'antd';\nimport Styled from 'styled-components';\n\nconst PageHeaderStyle = Styled(PageHeader)`\n  .ant-breadcrumb {\n    ol{\n      @media (max-width: 575px) {\n        justify-content: center;\n      }\n    }\n    li{\n        display:flex;\n        align-items:center;\n    }\n  }\n`;\n\nconst HeaderWrapper = Styled.div`\n  \n`;\n\nexport { PageHeaderStyle, HeaderWrapper };\n","import { Breadcrumb } from 'antd';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { ReactSVG } from 'react-svg';\nimport { HeaderWrapper, PageHeaderStyle } from './style';\n\nfunction PageHeader(props) {\n  const { title, subTitle, routes, buttons, ghost, bgColor, className } = props;\n  const breadcrumb = routes ? (\n    <Breadcrumb\n      className=\"flex order-2 relative top-1.5\"\n      separator={<span className=\"inline-flex bg-light-extra relative -top-0.5 w-1 h-1 rounded-full\" />}\n    >\n      {routes.map((route, index) =>\n        index + 1 === routes.length ? (\n          <Breadcrumb.Item key={index} className=\"text-breadcrumbs dark:text-white30 text-15\">\n            {route.breadcrumbName}\n          </Breadcrumb.Item>\n        ) : (\n          <Breadcrumb.Item key={index} className=\"inline-flex items-start\">\n            <ReactSVG\n              className=\"relative top-0.5 ltr:mr-2 rtl:ml-2 [&>div>svg]:text-[#8c90a4] dark:[&>div>svg]:text-white60 \"\n              src={require(`../../static/img/icon/home.svg`).default}\n            />{' '}\n            <Link\n              to={route.path}\n              className=\"text-light hover:text-primary dark:text-[#a4a5aa] dark:hover:text-white87 text-sm\"\n            >\n              {route.breadcrumbName}\n            </Link>\n          </Breadcrumb.Item>\n        ),\n      )}\n    </Breadcrumb>\n  ) : (\n    ''\n  );\n  return (\n    <HeaderWrapper bgColor={bgColor}>\n      <PageHeaderStyle\n        className={`${className}`}\n        title={title}\n        subTitle={subTitle}\n        breadcrumb={breadcrumb}\n        extra={buttons}\n        ghost={ghost}\n      />\n    </HeaderWrapper>\n  );\n}\n\nPageHeader.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  bgColor: PropTypes.string,\n  className: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  buttons: PropTypes.array,\n  ghost: PropTypes.bool,\n};\n\nexport { PageHeader };\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Input, Upload, Spin, message, Select } from 'antd';\nimport { useAtom } from 'jotai';\nimport { UploadOutlined, EyeOutlined, DeleteOutlined, LinkOutlined } from '@ant-design/icons';\nimport { Button } from '../../components/buttons/buttons';\n\nimport { PageHeader } from '../../components/page-headers/page-headers';\nimport { uploadImage } from '../../utility/services/upload';\n\nimport { currentUserData } from '../../globalStore/index';\nconst { currentUser, updateUser } = require('../../utility/services/auth');\n\nfunction Profile() {\n  const [fileUrl, setFileUrl] = useState('');\n  const [userData, setUserData] = useAtom(currentUserData);\n\n  const [uploadLoading, setUploadLoading] = useState(false);\n\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = (values) => {\n    const body = values;\n    body.profile_image = fileUrl;\n\n    updateUser(body)\n      .then((res) => {\n        setUserData(res.data);\n        message.success('Updated successfully');\n      })\n      .catch((err) => {\n        console.log('err :>> ', err);\n        setLoading(false);\n      });\n  };\n\n  const handleCancel = (e) => {\n    e.preventDefault();\n    form.resetFields();\n  };\n\n  useEffect(() => {\n    currentUser().then((data) => {\n      setFileUrl(data.data.profile_image);\n      form.setFieldsValue(data.data);\n    });\n  }, []);\n\n  const [imageUrl, setImageUrl] = useState('');\n\n  const handleChange = (info) => {\n    setUploadLoading(true);\n\n    const formData = new FormData();\n    formData.append('file', info.file.originFileObj);\n\n    uploadImage(formData)\n      .then((res) => {\n        console.log(res);\n        setFileUrl(res.data.link);\n        setFilesData((prev) => [...prev, { id: info.file.uid, file: info.file.originFileObj, name: res?.data?.name }]);\n        setUploadLoading(false);\n      })\n      .catch((err) => {\n        message.error('Error while uploading');\n        setUploadLoading(false);\n      });\n  };\n\n  const PageRoutes = [\n    {\n      path: '/',\n      breadcrumbName: 'Dashboard',\n    },\n    {\n      path: '/profile',\n      breadcrumbName: 'Profile',\n    },\n  ];\n\n  return (\n    <>\n      <Spin spinning={loading}>\n        <PageHeader\n          title=\"Profile\"\n          routes={PageRoutes}\n          className=\"flex items-center justify-between px-8 xl:px-[15px] pt-2 pb-6 sm:pb-[30px] bg-transparent sm:flex-col\"\n        />\n        <div className=\"bg-white dark:bg-white10 m-0 p-0 mb-[25px] rounded-10 relative\">\n          <div className=\"p-[25px]\">\n            <img src={fileUrl} style={{ width: '200px', borderRadius: '30%' }} />\n            <Row gutter={16} className=\"ml-2\">\n              <Spin spinning={uploadLoading}>\n                <Col span={12}>\n                  <Form.Item>\n                    <Upload onChange={handleChange} fileList={[]}>\n                      <Button className=\"flex items-center\" icon={<UploadOutlined />}>\n                        Click to Upload\n                      </Button>\n                    </Upload>\n                  </Form.Item>\n                </Col>\n              </Spin>\n            </Row>\n            <Row justify=\"space-between\">\n              <Col xxl={24} lg={24} xs={24}>\n                <Form\n                  form={form}\n                  className=\"pt-2.5 pb-[30px]\"\n                  name=\"editProfile\"\n                  onFinish={handleSubmit}\n                  labelCol={{ span: 8 }}\n                  wrapperCol={{ span: 16 }}\n                >\n                  <Row gutter={16}>\n                    <Col span={12}>\n                      <Form.Item\n                        name=\"name\"\n                        label=\"Name\"\n                        className=\"mb-4 form-label-w-full form-label-text-start dark:text-white-60\"\n                        rules={[\n                          {\n                            required: true,\n                            message: 'Required! ',\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                      <Form.Item\n                        name=\"phone\"\n                        label=\"Phone Number\"\n                        className=\"mb-4 form-label-w-full form-label-text-start\"\n                        rules={[\n                          {\n                            required: true,\n                            message: 'Required! ',\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item>\n                    </Col>\n                  </Row>\n                  <Row gutter={16}>\n                    <Col span={12}>\n                      <Form.Item\n                        name=\"email\"\n                        initialValue=\"\"\n                        label=\"Email\"\n                        className=\"mb-4 form-label-w-full form-label-text-start\"\n                        rules={[\n                          {\n                            required: true,\n                            message: 'Required! ',\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                      <Form.Item\n                        name=\"password\"\n                        label=\"Password\"\n                        className=\"mb-4 form-label-w-full form-label-text-start\"\n                      >\n                        <Input />\n                        Enter Password only if You want to change.\n                      </Form.Item>\n                    </Col>\n                  </Row>\n                  <Row gutter={16}>\n                    <Col span={12}>\n                      <Form.Item label=\"Father's Name\" name=\"fatherName\">\n                        <Input />\n                      </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                      <Form.Item label=\"Mother's Name\" name=\"motherName\">\n                        <Input />\n                      </Form.Item>\n                    </Col>\n                  </Row>\n                  <Row gutter={16}>\n                    <Col span={12}>\n                      <Form.Item name=\"gender\" label=\"Gender\">\n                        <Select\n                          placeholder=\"Select option...\"\n                          // onChange={onGenderChange}\n                          allowClear\n                        >\n                          <Option value=\"male\">Male</Option>\n                          <Option value=\"female\">Female</Option>\n                          <Option value=\"other\">Others</Option>\n                        </Select>\n                      </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                      <Form.Item name=\"address\" label=\"Address\">\n                        <Input />\n                      </Form.Item>\n                    </Col>\n                  </Row>\n                  <Spin spinning={uploadLoading}>\n                    <div className=\"flex justify-end gap-2 mt-2\">\n                      <Button size=\"default\" htmlType=\"submit\" type=\"primary\" className=\"h-11 px-[20px] font-semibold\">\n                        Update Profile\n                      </Button>\n                      &nbsp; &nbsp;\n                      <Button\n                        size=\"default\"\n                        onClick={handleCancel}\n                        type=\"light\"\n                        className=\"h-11 px-[20px] bg-regularBG dark:bg-white10 text-body dark:text-white87 font-semibold border-regular dark:border-white10\"\n                      >\n                        Cancel\n                      </Button>\n                    </div>\n                  </Spin>\n                </Form>\n              </Col>\n            </Row>\n          </div>\n        </div>\n      </Spin>\n    </>\n  );\n}\n\nexport default Profile;\n","import { callApi } from '../apiUtils';\n\nconst uploadImage = async (body) => {\n  const response = await callApi.post(`/upload`, body);\n  return response;\n};\n\nexport { uploadImage };\n"],"names":["ButtonGroup","Button","Group","ButtonStyled","Styled","_templateObject","_taggedTemplateLiteral","_templateObject2","props","type","shape","icon","size","outlined","ghost","transparented","raised","squared","color","social","load","children","rest","state","setState","useState","loading","_jsx","transparent","data","onClick","enterLoading","defaultProps","PageHeaderStyle","PageHeader","HeaderWrapper","div","title","subTitle","routes","buttons","bgColor","className","breadcrumb","Breadcrumb","separator","map","route","index","length","Item","breadcrumbName","_jsxs","ReactSVG","src","require","Link","to","path","concat","extra","currentUser","updateUser","fileUrl","setFileUrl","userData","setUserData","useAtom","currentUserData","uploadLoading","setUploadLoading","form","Form","useForm","setLoading","useEffect","then","profile_image","setFieldsValue","imageUrl","setImageUrl","_Fragment","Spin","spinning","style","width","borderRadius","Row","gutter","Col","span","Upload","onChange","info","formData","FormData","append","file","originFileObj","uploadImage","res","console","log","link","setFilesData","prev","_res$data","id","uid","name","catch","err","message","error","fileList","UploadOutlined","justify","xxl","lg","xs","onFinish","values","body","success","labelCol","wrapperCol","label","rules","required","Input","initialValue","Select","placeholder","allowClear","Option","value","htmlType","e","preventDefault","resetFields","async","callApi","post"],"sourceRoot":""}