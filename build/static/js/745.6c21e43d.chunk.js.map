{"version":3,"file":"static/js/745.6c21e43d.chunk.js","mappings":"+YAQA,MAAM,OAAEA,GAAWC,EAAAA,EAkPnB,EAhPgBC,IAA2D,IAA1D,YAAEC,EAAW,WAAEC,EAAU,aAAEC,EAAY,UAAEC,GAAWJ,EACnE,MAAOK,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KACpCC,EAAcC,IAAmBF,EAAAA,EAAAA,UAAS,KAC1CG,EAAgBC,IAAqBJ,EAAAA,EAAAA,WAAS,IAC9CK,EAAcC,IAAmBN,EAAAA,EAAAA,aACjCO,EAASC,IAAcR,EAAAA,EAAAA,WAAS,IAChCS,EAAeC,IAAoBV,EAAAA,EAAAA,WAAS,IAE5CW,EAAgBC,IAAqBZ,EAAAA,EAAAA,UAAS,MACrDa,QAAQC,IAAI,iBAAkBH,GAC9B,MAAOI,EAAgBC,IAAqBhB,EAAAA,EAAAA,UAAS,OAM9CiB,GAAQC,EAAAA,EAAKC,UA+EpB,OAnBAC,EAAAA,EAAAA,YAAU,KAEK,OAATvB,QAAS,IAATA,GAAAA,EAAWwB,QACbb,GAAW,GC7EIc,WAAmB,IAAZ,GAAEC,GAAIC,EAEhC,aADuBC,EAAAA,EAAQC,IAAI,aAADC,OAAcJ,GACjC,ED4EXK,CAAa,CAAEL,GAAa,OAAT1B,QAAS,IAATA,OAAS,EAATA,EAAWwB,QAC3BQ,MAAMC,IAAS,IAADC,EAAAC,EAAAC,EACbhB,EAAKiB,eAAkB,OAAHJ,QAAG,IAAHA,OAAG,EAAHA,EAAKK,MACzBnB,EAAqB,OAAHc,QAAG,IAAHA,GAAS,QAANC,EAAHD,EAAKK,YAAI,IAAAJ,OAAN,EAAHA,EAAWK,aAE7B,MAAMC,EAAU,OAAHP,QAAG,IAAHA,GAAS,QAANE,EAAHF,EAAKK,YAAI,IAAAH,GAAO,QAAPC,EAATD,EAAWM,aAAK,IAAAL,OAAb,EAAHA,EAAkBnC,UAC/BC,EAAasC,GACb7B,GAAW,EAAM,IAElB+B,OAAOC,IACN3B,QAAQC,IAAI,MAAO0B,GACnBhC,GAAW,EAAM,IAEvB,GACC,CAAU,OAATX,QAAS,IAATA,OAAS,EAATA,EAAWwB,SAEboB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,SAAUvC,EAAQoC,UACtBC,EAAAA,EAAAA,KAAA,OAAAD,UACEF,EAAAA,EAAAA,MAACvB,EAAAA,EAAI,CAAC6B,KAAK,MAAM9B,KAAMA,EAAM+B,OAAO,WAAWC,SAzDrCC,IAChB,MAAMC,EAAO,CACXJ,KAAY,OAANG,QAAM,IAANA,OAAM,EAANA,EAAQH,KACdK,UAAiB,OAANF,QAAM,IAANA,OAAM,EAANA,EAAQE,UACnBd,MAAO,CAAExC,aACTsC,YAAarB,GAcP,IAADsC,EAXM,OAATxD,QAAS,IAATA,GAAAA,EAAWwB,MC3CDC,WAAyB,IAAlB,GAAEC,EAAE,KAAE4B,GAAMG,EAEnC,aADuB7B,EAAAA,EAAQ8B,MAAM,aAAD5B,OAAcJ,GAAM4B,EACzC,ED0CXK,CAAU,CACRjC,GAAa,OAAT1B,QAAS,IAATA,OAAS,EAATA,EAAWwB,MACf8B,KAAMA,IAELtB,MAAMC,IACLlC,EAAa,CAAE6D,QAAQ,EAAOpC,MAAO,KACrC1B,IACA+D,EAAAA,GAAQC,QAAQ,4BAA4B,IAE7CpB,OAAOC,GAAQ3B,QAAQC,IAAI,MAAO0B,KAInC,QAFFa,ECtES/B,WAAqB,IAAd,KAAE6B,GAAM1D,EAE5B,aADuBgC,EAAAA,EAAQmC,KAAK,YAAaT,EAClC,EDoEXU,CAAO,CACLV,KAAMA,WACN,IAAAE,GAFFA,EAGIxB,MAAMC,IACNpC,GAAY,GACZC,IACA+D,EAAAA,GAAQC,QAAQ,0BAA0B,IAE3CpB,OAAOC,IACN3B,QAAQC,IAAI,WAAY0B,EAAI,GAElC,EA0ByEsB,aAAa,MAAKnB,SAAA,EACnFF,EAAAA,EAAAA,MAACsB,EAAAA,EAAG,CAACC,OAAQ,CAAC,GAAI,GAAGrB,SAAA,EACnBC,EAAAA,EAAAA,KAACqB,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAGxB,UAClBC,EAAAA,EAAAA,KAAC1B,EAAAA,EAAKkD,KAAI,CACRC,MAAM,OACNtB,KAAK,OACLuB,MAAO,CACL,CACEC,UAAU,EACVb,QAAS,eAEXf,UAEFC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAK,SAGV5B,EAAAA,EAAAA,KAACqB,EAAAA,EAAG,CAACQ,KAAM,GAAG9B,UACZC,EAAAA,EAAAA,KAAC1B,EAAAA,EAAKkD,KAAI,CACRC,MAAM,YACNtB,KAAK,YACLuB,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,2BAA4Bf,UAE/DC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAK,YAIZ/B,EAAAA,EAAAA,MAACsB,EAAAA,EAAG,CAACC,OAAQ,CAAC,GAAI,GAAGrB,SAAA,EACnBC,EAAAA,EAAAA,KAACqB,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAGxB,UAClBC,EAAAA,EAAAA,KAAC1B,EAAAA,EAAKkD,KAAI,CACRC,MAAM,eACNtB,KAAK,eACLuB,MAAO,CACL,CACEC,UAAU,EACVb,QAAS,eAEXf,UAEFC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAK,SAGV5B,EAAAA,EAAAA,KAACqB,EAAAA,EAAG,CAACQ,KAAM,GAAG9B,UACZC,EAAAA,EAAAA,KAAC1B,EAAAA,EAAKkD,KAAI,CACRC,MAAM,eACNtB,KAAK,eACLuB,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,2BAA4Bf,UAE/DC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAK,YAIZ/B,EAAAA,EAAAA,MAAA,OAAKiC,UAAU,OAAM/B,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,iBACPC,EAAAA,EAAAA,KAAC+B,IAAQ,CAACxC,KAAMpB,EAAgB6D,OAAQC,IAAeC,SA5I5CC,CAACC,EAAOJ,KAC7B5D,EAAkB4D,EAAOK,UAAU,QA6I3BrC,EAAAA,EAAAA,KAACmB,EAAAA,EAAG,CAAApB,UACFC,EAAAA,EAAAA,KAACqB,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAGxB,UAClBF,EAAAA,EAAAA,MAACvB,EAAAA,EAAKkD,KAAI,CAACC,MAAM,QAAQtB,KAAK,QAAOJ,SAAA,EACnCC,EAAAA,EAAAA,KAACsC,EAAAA,EAAM,CAACJ,SA3IFK,IACpBzE,GAAiB,GAEjB,MAAM0E,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQH,EAAK9C,KAAKkD,gBAElCC,EAAAA,EAAAA,GAAYJ,GACTvD,MAAMC,IACL/B,GAAc0F,IAAI,IAAAC,EAAA,MAAK,IAAID,EAAM,CAAEE,KAAS,OAAH7D,QAAG,IAAHA,GAAS,QAAN4D,EAAH5D,EAAKK,YAAI,IAAAuD,OAAN,EAAHA,EAAWC,MAAO,IAC3DjF,GAAiB,EAAM,IAExB6B,OAAOC,IACNkB,EAAAA,GAAQkC,MAAM,yBACdlF,GAAiB,EAAM,GACvB,EA6H0CmF,SAAU,GAAGlD,UAC3CC,EAAAA,EAAAA,KAACkD,EAAAA,EAAM,CAACpB,UAAU,oBAAoBqB,MAAMnD,EAAAA,EAAAA,KAACoD,EAAAA,EAAc,IAAIrD,SAAC,uBAIlEC,EAAAA,EAAAA,KAAA,OAAK8B,UAAU,SAASuB,MAAO,CAAEC,UAAW,QAASC,UAAW,QAASxD,UAC7D,OAAT7C,QAAS,IAATA,OAAS,EAATA,EAAWsG,QAAS,IACV,OAATtG,QAAS,IAATA,OAAS,EAATA,EAAWuG,KAAKC,IACd7D,EAAAA,EAAAA,MAAA,OAEEiC,UAAU,oEAAmE/B,SAAA,EAE7EF,EAAAA,EAAAA,MAAA,OAAKiC,UAAU,OAAM/B,SAAA,EACnBC,EAAAA,EAAAA,KAAA,QAAM8B,UAAU,OAAM/B,UACpBC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAY,MAEd,oBAEH9D,EAAAA,EAAAA,MAAA,OAAKiC,UAAU,uBAAsB/B,SAAA,EACnCC,EAAAA,EAAAA,KAAA,OAAK8B,UAAU,iBAAgB/B,UAC7BC,EAAAA,EAAAA,KAAA,OACE4D,QAASA,KA/IjBlF,WAAkB,IAADmF,EACrC,MAAMpE,EAAOqE,EACbxG,EAAoB,OAAJmC,QAAI,IAAJA,OAAI,EAAJA,EAAMsD,MACtBvF,GAAkB,GAClBE,EAAoB,OAAJ+B,QAAI,IAAJA,GAAAA,EAAMA,KAAW,OAAJA,QAAI,IAAJA,GAAU,QAANoE,EAAJpE,EAAMA,YAAI,IAAAoE,OAAN,EAAJA,EAAY1D,KAAW,OAAJV,QAAI,IAAJA,OAAI,EAAJA,EAAMU,KAAK,EA4I7B4D,CAAcL,EAAI,EAClB3D,UAEFC,EAAAA,EAAAA,KAACgE,EAAAA,EAAW,SAGhBhE,EAAAA,EAAAA,KAAA,OAAK8B,UAAU,iBAAgB/B,UAC7BC,EAAAA,EAAAA,KAAA,OACE4D,QAASA,KACP,MAAMK,EAAgC,OAAT/G,QAAS,IAATA,OAAS,EAATA,EAAWgH,QAAQC,IAAI,IAAAC,EAAA,OAC9C,OAAJD,QAAI,IAAJA,GAAAA,EAAM1E,MAAW,OAAJ0E,QAAI,IAAJA,GAAU,QAANC,EAAJD,EAAM1E,YAAI,IAAA2E,OAAN,EAAJA,EAAYC,QAAW,OAAHX,QAAG,IAAHA,OAAG,EAAHA,EAAK/E,KAAS,OAAJwF,QAAI,IAAJA,OAAI,EAAJA,EAAMxF,OAAU,OAAH+E,QAAG,IAAHA,OAAG,EAAHA,EAAK/E,GAAE,IAEjExB,EAAa8G,EAAqB,EAClClE,UAEFC,EAAAA,EAAAA,KAACsE,EAAAA,EAAc,CAACjB,MAAO,CAAEkB,MAAO,kBA5B9B,OAAHb,QAAG,IAAHA,OAAG,EAAHA,EAAK/E,iBAuCxBkB,EAAAA,EAAAA,MAAA,OAAKiC,UAAU,8BAA6B/B,SAAA,EAC1CC,EAAAA,EAAAA,KAACkD,EAAAA,EAAM,CACLU,QAASA,KACP9G,GAAY,GACZE,EAAa,CAAE6D,QAAQ,EAAOpC,MAAO,IAAK,EAC1CsB,SACH,YAGDC,EAAAA,EAAAA,KAACkD,EAAAA,EAAM,CAACsB,KAAK,UAAUC,SAAS,SAAS9G,QAASE,EAAckC,SAAC,sBASzEC,EAAAA,EAAAA,KAAC0E,EAAAA,EAAK,CACJC,MAAO,IACPC,MAAOnH,EACPoH,KAAMtH,EACNuH,OAAQ,KACRC,SAAUA,KACRvH,GAAkB,GAClBF,EAAgB,GAAG,EAErB0H,gBAAc,EAAAjF,UAEdC,EAAAA,EAAAA,KAAA,OAAKiF,IAAK5H,GAA8B,GAAI6H,IAAK7H,EAAcgG,MAAO,CAAEsB,MAAO,eAEhF,E,iCE5OP,MA6HA,EA7HYQ,KACV,MAAOC,EAAUtI,IAAeM,EAAAA,EAAAA,WAAS,IAClCH,EAAWD,IAAgBI,EAAAA,EAAAA,UAAS,CAAEyD,QAAQ,EAAOpC,MAAO,MAC5D4G,EAAQC,IAAalI,EAAAA,EAAAA,UAAS,IAa/BmI,EAAU,CACd,CACEX,MAAO,MACPY,UAAW,KACXC,IAAK,KACLd,MAAO,KAET,CACEC,MAAO,OACPY,UAAW,OACXC,IAAK,OACLd,MAAO,KAET,CACEC,MAAO,YACPY,UAAW,YACXC,IAAK,YACLd,MAAO,KAGT,CACEC,MAAO,SACPa,IAAK,SACLC,OAAQA,CAACC,EAAGC,KACV/F,EAAAA,EAAAA,MAACgG,EAAAA,EAAK,CAACC,KAAK,SAAQ/F,SAAA,EAClBC,EAAAA,EAAAA,KAACkD,EAAAA,EAAM,CAAC4C,KAAK,SAASlC,QAASA,IAAM5G,EAAa,CAAE6D,QAAQ,EAAMpC,MAAa,OAANmH,QAAM,IAANA,OAAM,EAANA,EAAQjH,KAAMoB,SAAC,UAGxFC,EAAAA,EAAAA,KAAC+F,EAAAA,EAAU,CACTnB,MAAM,oCACNoB,UAAWA,KDlCLtH,WAAmB,IAAZ,GAAEC,GAAIsH,EAE7B,aADuBpH,EAAAA,EAAQqH,OAAO,aAADnH,OAAcJ,GACpC,ECiCHwH,CAAU,CAAExH,GAAU,OAANiH,QAAM,IAANA,OAAM,EAANA,EAAQQ,MACrBnH,MAAMC,IACLjB,QAAQC,IAAI,MAAOgB,GACnB4B,QAAQC,QAAQ,wBAChBhE,GAAY,IAEb4C,OAAOC,GAAQ3B,QAAQC,IAAI,MAAO0B,IAAK,EAE5CyG,OAAO,MACPC,WAAW,KAAIvG,UAEfC,EAAAA,EAAAA,KAACkD,EAAAA,EAAM,CAACqD,QAAM,EAACT,KAAK,SAAQ/F,SAAC,gBAMnC4E,MAAO,MAIL5H,EAAaA,KDvEH2B,WAA6B,IAAtB,MAAE8H,EAAK,MAAEC,GAAOC,EAEvC,aADuB7H,EAAAA,EAAQC,IAAI,mBAADC,OAAoByH,EAAK,WAAAzH,OAAU0H,GACtD,ECsEbE,CAAU,CAAC,GACR1H,MAAMC,IACK,IAAD4D,EAAL5D,GACFoG,EAAa,OAAHpG,QAAG,IAAHA,GAAS,QAAN4D,EAAH5D,EAAKK,YAAI,IAAAuD,OAAN,EAAHA,EAAW8D,KACvB,IAEDjH,OAAOC,GAAQ3B,QAAQC,IAAI,MAAO0B,IAAK,EAO5C,OAJApB,EAAAA,EAAAA,YAAU,KACRzB,GAAY,GACX,KAGD8C,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC6G,EAAAA,EAAU,CACTjC,MAAM,MACNkC,OAjFa,CACjB,CACEC,KAAM,IACNC,eAAgB,aAElB,CACED,KAAM,YACNC,eAAgB,aA2EdlF,UAAU,2GAEZ9B,EAAAA,EAAAA,KAACiH,EAAAA,GAAkB,CAACnF,UAAU,MAAK/B,UACjCC,EAAAA,EAAAA,KAACmB,EAAAA,EAAG,CAACC,OAAQ,GAAGrB,UACdC,EAAAA,EAAAA,KAACqB,EAAAA,EAAG,CAAC6F,GAAI,GAAI5F,GAAI,GAAI6F,GAAI,GAAIrF,UAAU,GAAE/B,UACvCC,EAAAA,EAAAA,KAACoH,EAAAA,EAAK,CACJC,SACErH,EAAAA,EAAAA,KAACkD,EAAAA,EAAM,CAACsB,KAAK,UAAUZ,QAASA,IAAM9G,GAAY,GAAMiD,SAAC,QAI3DuH,QAAQ,EACRxB,KAAK,UAAS/F,UAEdC,EAAAA,EAAAA,KAACuH,EAAAA,EAAK,CAACzB,KAAK,QAAQ0B,OAAQ,CAAEC,EAAG,OAAQC,EAAG,QAAUnC,QAASA,EAASoC,WAAYtC,aAM5FrF,EAAAA,EAAAA,KAAC0E,EAAAA,EAAK,CACJE,MAAK,GAAA7F,OAAKqG,EAAW,MAAQ,QAC7BJ,gBAAc,EACdH,KAAMO,GAAYnI,EAAU4D,OAC5B8D,MAAO,KAEPG,QAAQ,EACRC,SAAUA,KACRjI,GAAY,GACZE,EAAa,CAAE6D,QAAQ,EAAOpC,MAAO,IAAK,EAC1CsB,UAEFC,EAAAA,EAAAA,KAAC4H,EAAM,CAAC9K,YAAaA,EAAaC,WAAYA,EAAYE,UAAWA,EAAWD,aAAcA,QAE/F,C,gDCjIP,MAAM4F,EAAclE,eACKG,EAAAA,EAAQmC,KAAK,UAAWT,E","sources":["container/products/AddCms.jsx","utility/services/products.js","container/products/index.jsx","utility/services/upload.js"],"sourcesContent":["import { Button, Col, Form, Input, InputNumber, Modal, Row, Select, Spin, Upload, message } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { UploadOutlined, EyeOutlined, DeleteOutlined, LinkOutlined } from '@ant-design/icons';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { uploadImage } from '../../utility/services/upload';\nimport { addCms, getSingleCms, updateCms } from '../../utility/services/products';\n\nconst { Option } = Select;\n\nconst AddRoom = ({ setisAddCms, getAllData, setIsEditCms, isEditCms }) => {\n  const [filesData, setFilesData] = useState([]);\n  const [previewImage, setPreviewImage] = useState('');\n  const [isPreviewModal, setIsPreviewModal] = useState(false);\n  const [previewTitle, setPreviewTitle] = useState();\n  const [loading, setLoading] = useState(false);\n  const [uploadLoading, setUploadLoading] = useState(false);\n\n  const [content1Output, setContent1Output] = useState(null);\n  console.log('content1Output', content1Output);\n  const [content2Output, setContent2Output] = useState(null);\n\n  const handleContent2 = (event, editor) => {\n    setContent2Output(editor.getData());\n  };\n\n  const [form] = Form.useForm();\n\n  const handleChange = (info) => {\n    setUploadLoading(true);\n\n    const formData = new FormData();\n    formData.append('file', info.file.originFileObj);\n\n    uploadImage(formData)\n      .then((res) => {\n        setFilesData((prev) => [...prev, { link: res?.data?.link }]);\n        setUploadLoading(false);\n      })\n      .catch((err) => {\n        message.error('Error while uploading');\n        setUploadLoading(false);\n      });\n  };\n\n  const handlePreview = async (file_) => {\n    const file = file_;\n    setPreviewImage(file?.link);\n    setIsPreviewModal(true);\n    setPreviewTitle(file?.file ? file?.file?.name : file?.name);\n  };\n\n  const onFinish = (values) => {\n    const body = {\n      name: values?.name,\n      inventory: values?.inventory,\n      media: { filesData },\n      description: content2Output,\n    };\n\n    if (isEditCms?.cmsId) {\n      updateCms({\n        id: isEditCms?.cmsId,\n        body: body,\n      })\n        .then((res) => {\n          setIsEditCms({ isOpen: false, cmsId: '' });\n          getAllData();\n          message.success('Data updated successfully');\n        })\n        .catch((err) => console.log('err', err));\n    } else {\n      addCms({\n        body: body,\n      })\n        ?.then((res) => {\n          setisAddCms(false);\n          getAllData();\n          message.success('Data added successfully');\n        })\n        .catch((err) => {\n          console.log('err :>> ', err);\n        });\n    }\n  };\n\n  useEffect(() => {\n    // populate single data\n    if (isEditCms?.cmsId) {\n      setLoading(true);\n      getSingleCms({ id: isEditCms?.cmsId })\n        .then((res) => {\n          form.setFieldsValue(res?.data);\n          setContent2Output(res?.data?.description);\n\n          const file = res?.data?.media?.filesData;\n          setFilesData(file);\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.log('err', err);\n          setLoading(false);\n        });\n    }\n  }, [isEditCms?.cmsId]);\n  return (\n    <>\n      <Spin spinning={loading}>\n        <div>\n          <Form name=\"cms\" form={form} layout=\"vertical\" onFinish={onFinish} autoComplete=\"off\">\n            <Row gutter={[16, 0]}>\n              <Col xs={24} md={12}>\n                <Form.Item\n                  label=\"name\"\n                  name=\"name\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Required! ',\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item\n                  label=\"Inventory\"\n                  name=\"inventory\"\n                  rules={[{ required: true, message: 'inventory is required!' }]}\n                >\n                  <Input />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={[16, 0]}>\n              <Col xs={24} md={12}>\n                <Form.Item\n                  label=\"Actual Price\"\n                  name=\"actual_price\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Required! ',\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item\n                  label=\"Retail Price\"\n                  name=\"retail_price\"\n                  rules={[{ required: true, message: 'inventory is required!' }]}\n                >\n                  <Input />\n                </Form.Item>\n              </Col>\n            </Row>\n            <div className=\"mt-4\">\n              <label>Description</label>\n              <CKEditor data={content2Output} editor={ClassicEditor} onChange={handleContent2} />\n            </div>\n            <Row>\n              <Col xs={24} md={12}>\n                <Form.Item label=\"Image\" name=\"image\">\n                  <Upload onChange={handleChange} fileList={[]}>\n                    <Button className=\"flex items-center\" icon={<UploadOutlined />}>\n                      Click to Upload\n                    </Button>\n                  </Upload>\n                  <div className=\"w-full\" style={{ maxHeight: '230px', overflowY: 'auto' }}>\n                    {filesData?.length > 0 &&\n                      filesData?.map((val) => (\n                        <div\n                          key={val?.id}\n                          className=\"flex border rounded-md justify-between items-center p-1 px-3 my-1\"\n                        >\n                          <div className=\"flex\">\n                            <span className=\"mr-2\">\n                              <LinkOutlined />\n                            </span>\n                            {'Product Image'}\n                          </div>\n                          <div className=\"flex gap-3 text-base\">\n                            <div className=\"cursor-pointer\">\n                              <div\n                                onClick={() => {\n                                  handlePreview(val);\n                                }}\n                              >\n                                <EyeOutlined />\n                              </div>\n                            </div>\n                            <div className=\"cursor-pointer\">\n                              <div\n                                onClick={() => {\n                                  const filteredRemovedFiles = filesData?.filter((elem) =>\n                                    elem?.file ? elem?.file?.uid !== val?.id : elem?.id !== val?.id,\n                                  );\n                                  setFilesData(filteredRemovedFiles);\n                                }}\n                              >\n                                <DeleteOutlined style={{ color: 'red' }} />\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      ))}\n                  </div>\n                </Form.Item>\n              </Col>\n            </Row>\n\n            <div className=\"flex justify-end gap-2 mt-5\">\n              <Button\n                onClick={() => {\n                  setisAddCms(false);\n                  setIsEditCms({ isOpen: false, cmsId: '' });\n                }}\n              >\n                Cancel\n              </Button>\n              <Button type=\"primary\" htmlType=\"submit\" loading={uploadLoading}>\n                Submit\n              </Button>\n            </div>\n          </Form>\n        </div>\n      </Spin>\n\n      {/* Image preview modal */}\n      <Modal\n        width={410}\n        title={previewTitle}\n        open={isPreviewModal}\n        footer={null}\n        onCancel={() => {\n          setIsPreviewModal(false);\n          setPreviewImage('');\n        }}\n        destroyOnClose\n      >\n        <img src={previewImage ? previewImage : ''} alt={previewImage} style={{ width: '400px' }} />\n      </Modal>\n    </>\n  );\n};\n\nexport default AddRoom;\n","import { callApi } from '../apiUtils';\n\nconst addCms = async ({ body }) => {\n  const response = await callApi.post(`/products`, body);\n  return response;\n};\n\nconst getAllCms = async ({ start, limit }) => {\n  const response = await callApi.get(`/products?start=${start}&limit=${limit}`);\n  return response;\n};\n\nconst getSingleCms = async ({ id }) => {\n  const response = await callApi.get(`/products/${id}`);\n  return response;\n};\n\nconst updateCms = async ({ id, body }) => {\n  const response = await callApi.patch(`/products/${id}`, body);\n  return response;\n};\n\nconst deleteCms = async ({ id }) => {\n  const response = await callApi.delete(`/products/${id}`);\n  return response;\n};\n\nexport { addCms, getAllCms, getSingleCms, updateCms, deleteCms };\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Button, Modal, Input, Popconfirm } from 'antd';\n\nimport { Space, Table } from 'antd';\nimport AddCms from './AddCms';\nimport { GlobalUtilityStyle } from '../styled';\nimport { PageHeader } from '../../components/page-headers/page-headers';\nimport { Cards } from '../../components/cards/frame/cards-frame';\nimport { deleteCms, getAllCms } from '../../utility/services/products';\n\nconst Cms = () => {\n  const [isAddCms, setisAddCms] = useState(false);\n  const [isEditCms, setIsEditCms] = useState({ isOpen: false, cmsId: '' });\n  const [allCms, setAllCms] = useState([]);\n\n  const PageRoutes = [\n    {\n      path: '/',\n      breadcrumbName: 'Dashboard',\n    },\n    {\n      path: '/products',\n      breadcrumbName: 'Products',\n    },\n  ];\n\n  const columns = [\n    {\n      title: '#Id',\n      dataIndex: 'id',\n      key: 'id',\n      width: 140,\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      width: 140,\n    },\n    {\n      title: 'Inventory',\n      dataIndex: 'inventory',\n      key: 'inventroy',\n      width: 150,\n    },\n\n    {\n      title: 'Action',\n      key: 'action',\n      render: (_, record) => (\n        <Space size=\"middle\">\n          <Button size=\"middle\" onClick={() => setIsEditCms({ isOpen: true, cmsId: record?.id })}>\n            Edit\n          </Button>\n          <Popconfirm\n            title=\"Are you sure to delete this task?\"\n            onConfirm={() => {\n              deleteCms({ id: record?._id })\n                .then((res) => {\n                  console.log('res', res);\n                  message.success('Deleted Successfully');\n                  getAllData();\n                })\n                .catch((err) => console.log('err', err));\n            }}\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <Button danger size=\"middle\">\n              Delete\n            </Button>\n          </Popconfirm>\n        </Space>\n      ),\n      width: 150,\n    },\n  ];\n\n  const getAllData = () => {\n    getAllCms({})\n      .then((res) => {\n        if (res) {\n          setAllCms(res?.data?.rows);\n        }\n      })\n      .catch((err) => console.log('err', err));\n  };\n\n  useEffect(() => {\n    getAllData();\n  }, []);\n\n  return (\n    <>\n      <PageHeader\n        title=\"Cms\"\n        routes={PageRoutes}\n        className=\"flex items-center justify-between px-8 xl:px-[15px] pt-2 pb-6 sm:pb-[30px] bg-transparent sm:flex-col\"\n      />\n      <GlobalUtilityStyle className=\"p-3\">\n        <Row gutter={16}>\n          <Col sm={24} xs={24} lg={24} className=\"\">\n            <Cards\n              moreBtn={\n                <Button type=\"primary\" onClick={() => setisAddCms(true)}>\n                  Add\n                </Button>\n              }\n              border={false}\n              size=\"default\"\n            >\n              <Table size=\"small\" scroll={{ x: '100%', y: 'auto' }} columns={columns} dataSource={allCms} />\n            </Cards>\n          </Col>\n        </Row>\n      </GlobalUtilityStyle>\n\n      <Modal\n        title={`${isAddCms ? 'Add' : 'Edit'}`}\n        destroyOnClose\n        open={isAddCms || isEditCms.isOpen}\n        width={1024}\n        // onOk={handleAddCmss}\n        footer={false}\n        onCancel={() => {\n          setisAddCms(false);\n          setIsEditCms({ isOpen: false, cmsId: '' });\n        }}\n      >\n        <AddCms setisAddCms={setisAddCms} getAllData={getAllData} isEditCms={isEditCms} setIsEditCms={setIsEditCms} />\n      </Modal>\n    </>\n  );\n};\n\nexport default Cms;\n","import { callApi } from '../apiUtils';\n\nconst uploadImage = async (body) => {\n  const response = await callApi.post(`/upload`, body);\n  return response;\n};\n\nexport { uploadImage };\n"],"names":["Option","Select","_ref","setisAddCms","getAllData","setIsEditCms","isEditCms","filesData","setFilesData","useState","previewImage","setPreviewImage","isPreviewModal","setIsPreviewModal","previewTitle","setPreviewTitle","loading","setLoading","uploadLoading","setUploadLoading","content1Output","setContent1Output","console","log","content2Output","setContent2Output","form","Form","useForm","useEffect","cmsId","async","id","_ref3","callApi","get","concat","getSingleCms","then","res","_res$data2","_res$data3","_res$data3$media","setFieldsValue","data","description","file","media","catch","err","_jsxs","_Fragment","children","_jsx","Spin","spinning","name","layout","onFinish","values","body","inventory","_addCms","_ref4","patch","updateCms","isOpen","message","success","post","addCms","autoComplete","Row","gutter","Col","xs","md","Item","label","rules","required","Input","span","className","CKEditor","editor","ClassicEditor","onChange","handleContent2","event","getData","Upload","info","formData","FormData","append","originFileObj","uploadImage","prev","_res$data","link","error","fileList","Button","icon","UploadOutlined","style","maxHeight","overflowY","length","map","val","LinkOutlined","onClick","_file$file","file_","handlePreview","EyeOutlined","filteredRemovedFiles","filter","elem","_elem$file","uid","DeleteOutlined","color","type","htmlType","Modal","width","title","open","footer","onCancel","destroyOnClose","src","alt","Cms","isAddCms","allCms","setAllCms","columns","dataIndex","key","render","_","record","Space","size","Popconfirm","onConfirm","_ref5","delete","deleteCms","_id","okText","cancelText","danger","start","limit","_ref2","getAllCms","rows","PageHeader","routes","path","breadcrumbName","GlobalUtilityStyle","sm","lg","Cards","moreBtn","border","Table","scroll","x","y","dataSource","AddCms"],"sourceRoot":""}